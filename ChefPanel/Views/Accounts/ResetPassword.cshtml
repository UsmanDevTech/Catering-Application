@model ChefPanel.ViewModels.ResetPasswordVM
@{
    Layout = null;
}

<html lang="en">
<head>
    <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Login</title>
    <!-- Favicon -->
    <link rel='shortcut icon' type='image/x-icon' href='~/Images/cattering.png' />

    <!-- Custom css-->
    <link rel="stylesheet" href="~/content/dist/css/poppinsFont.css">
    <link rel="stylesheet" href="~/content/dist/css/montserrat.css">

    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&amp;display=fallback">

    <link rel="stylesheet" href="~/adminLTE/plugins/fontawesome-free/css/all.min.css">

    <link rel="stylesheet" href="~/adminLTE/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">

    <link rel="stylesheet" href="~/adminLTE/plugins/icheck-bootstrap/icheck-bootstrap.min.css">

    <link rel="stylesheet" href="~/adminLTE/dist/css/adminlte.min.css">
    <link rel="stylesheet" href="~/adminLTE/plugins/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css">
    <link rel="stylesheet" href="~/adminLTE/plugins/overlayScrollbars/css/OverlayScrollbars.min.css">
    <link rel="stylesheet" href="~/adminLTE/plugins/toastr/toastr.min.css">

    <link rel="stylesheet" href="~/content/dist/css/plugin.css" />
    <!-- Custom css-->
    <link rel="stylesheet" href="~/content/dist/css/Custom.css" />
    <link rel="stylesheet" href="~/content/dist/css/CircleBlick.css" />

    <!-- site Custom css-->
    <link rel="stylesheet" href="~/css/site.css" />

    <style>

        .btnbutton {
            width: 100%;
            border-radius: 30px;
            height: 100%;
            font-family: 'PoppinsFontmedium';
            font-size: 16px;
        }

        .btn-theme2 {
            color: #fff;
            border-color: #707070;
            text-decoration: none;
            background-color: #010C80;
         }

            .btn-theme2:hover {
                color: #fff;
                border-color: #707070;
                text-decoration: none;
                background-color: #000969
            }
        .loading {
            position: fixed;
            z-index: 999;
            height: 2em;
            width: 2em;
            overflow: show;
            margin: auto;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
        }

            /* Transparent Overlay */
            .loading:before {
                content: '';
                display: block;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: radial-gradient(rgba(20, 20, 20,.8), rgba(0, 0, 0, .8));
                background: -webkit-radial-gradient(rgba(20, 20, 20,.8), rgba(0, 0, 0,.8));
            }

            /* :not(:required) hides these rules from IE9 and below */
            .loading:not(:required) {
                /* hide "loading..." text */
                font: 0/0 a;
                color: transparent;
                text-shadow: none;
                background-color: transparent;
                border: 0;
            }

                .loading:not(:required):after {
                    content: '';
                    display: block;
                    font-size: 10px;
                    width: 1em;
                    height: 1em;
                    margin-top: -0.5em;
                    -webkit-animation: spinner 150ms infinite linear;
                    -moz-animation: spinner 150ms infinite linear;
                    -ms-animation: spinner 150ms infinite linear;
                    -o-animation: spinner 150ms infinite linear;
                    animation: spinner 150ms infinite linear;
                    border-radius: 0.5em;
                    -webkit-box-shadow: rgba(255,255,255, 0.75) 1.5em 0 0 0, rgba(255,255,255, 0.75) 1.1em 1.1em 0 0, rgba(255,255,255, 0.75) 0 1.5em 0 0, rgba(255,255,255, 0.75) -1.1em 1.1em 0 0, rgba(255,255,255, 0.75) -1.5em 0 0 0, rgba(255,255,255, 0.75) -1.1em -1.1em 0 0, rgba(255,255,255, 0.75) 0 -1.5em 0 0, rgba(255,255,255, 0.75) 1.1em -1.1em 0 0;
                    box-shadow: rgba(255,255,255, 0.75) 1.5em 0 0 0, rgba(255,255,255, 0.75) 1.1em 1.1em 0 0, rgba(255,255,255, 0.75) 0 1.5em 0 0, rgba(255,255,255, 0.75) -1.1em 1.1em 0 0, rgba(255,255,255, 0.75) -1.5em 0 0 0, rgba(255,255,255, 0.75) -1.1em -1.1em 0 0, rgba(255,255,255, 0.75) 0 -1.5em 0 0, rgba(255,255,255, 0.75) 1.1em -1.1em 0 0;
                }

        /* Animation */

        @@-webkit-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @@-moz-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @@-o-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @@keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }
    </style>
</head>

<body class="hold-transition login-page">
    <div id="showLoaderApi"></div>
    <div class="login-box">
        <!-- /.login-logo -->
        <div class="card">
            <div class="card-body login-card-body">
                <div class="login-logo animated fadeInDown mb-4 mt-3">
                    <img src="~/Images/8635fdd8924cc8147a1acf51cf839324.png" width="215" alt="Warren`s Catering Logo">
                </div>
                <input id="email" name="Email" asp-for="Email" type="hidden" value="@Model.Email" class="form-control">
                <input id="code" name="Code" asp-for="Code" type="hidden" value="@Model.Code" class="form-control">
                @*<p class="login-box-msg">Enter your new password below</p>*@
                <form method="POST" style="text-align: initial;">
                    <div class="form-group">
                        <label class="mb-1">Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" name="NewPassword" id="new_password" placeholder="Enter your new password" required>
                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span toggle="#new_password" class="fa fa-fw fa-eye toggle-password"></span>
                                </div>
                            </div>
                        </div>
                        <span class="text-danger small-font"></span>

                    </div>
                    <div class="form-group">
                        <label class="mb-1">Confirm Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" name="ConfirmPassword" id="confirm_password" placeholder="Confirm your new password" required>
                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span toggle="#confirm_password" class="fa fa-fw fa-eye toggle-password"></span>
                                </div>
                            </div>
                        </div>
                        <span class="text-danger small-font"></span>

                    </div>
                    <div class="form-group mb-2 mt-4 text-center">
                        <button type="button" class="btn btn-theme2 btnbutton " onclick="resetPassword()"> Reset Password </button>
                    </div>
                </form>
            </div>
            <!-- /.login-card-body -->
        </div>
    </div>
    <!-- /.login-box -->

    <script src="~/adminLTE/plugins/jquery/jquery.min.js"></script>

    <script src="~/adminLTE/plugins/jquery-ui/jquery-ui.min.js"></script>

    <script src="~/adminLTE/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/adminLTE/plugins/moment/moment.min.js"></script>

    <script src="~/adminLTE/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <script src="~/adminLTE/plugins/toastr/toastr.min.js"></script>
    <script src="~/adminLTE/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
    <script src="~/adminLTE/plugins/sweetalert2/sweetalert2.min.js"></script>

    <script src="~/adminLTE/dist/js/adminlte.min.js"></script>

</body>
</html>
<script>
    const loaderDiv = document.getElementById('showLoaderApi');
    var Toast = Swal.mixin({
        toast: true,
        position: 'top-end',
        showConfirmButton: false,
        timer: 4000
    });
    function loadHttpRequest(method, url, cFunction, params) {
        loaderDiv.innerHTML = '<div class="loading">Loading&#8230;</div>';
        var xhttp;
        xhttp = new XMLHttpRequest();

        xhttp.addEventListener("load", transferComplete);
        xhttp.addEventListener("error", transferFailed);
        xhttp.addEventListener("abort", transferCanceled);

        xhttp.onreadystatechange = function () {

            if (this.readyState == 4 && this.status == 200) {
                const objModel = JSON.parse(this.responseText);
                if (objModel.status) {
                    cFunction(objModel.result)
                }
                else {
                    toastr.error(objModel.result)
                }
            }
        };
        xhttp.open(method, url, true);
        xhttp.setRequestHeader("Content-type", "application/json");
        xhttp.send(params);
    }
    function transferComplete(evt) {
        var response = JSON.parse(evt.currentTarget.responseText);

        if (!response.status) {
            toastr.error(response.result)
        }
        else if (response.status != 200) {
            if (response.errors != null) {
                toastr.error(JSON.stringify(response.errors));
            }

        }
        else {
            console.error("Error! ", JSON.parse(evt.currentTarget.responseText));
        }
        loaderDiv.innerHTML = '';
    }
    function transferFailed(evt) {
        console.error("transferFailed", JSON.parse(evt.currentTarget.responseText));
        var response = JSON.parse(evt.currentTarget.responseText);

        if (!response.status) {
            toastr.error(response.result)
        }
    }
    function transferCanceled(evt) {
        console.error("transferCanceled", JSON.parse(evt.currentTarget.responseText));

        var response = JSON.parse(evt.currentTarget.responseText);

        if (!response.status) {
            toastr.error(response.result)
        }
    }
    function CheckNullUndefined(value) {
        return typeof value == 'string' && !value.trim() || typeof value == 'undefined' || value === null;
    }
    function updatePasswordHandler(evt) {
        $("#new_password").val("");
        $("#confirm_password").val("");
        Swal.fire({
            title: 'Password changed successfully',
            imageUrl: '/content/dist/img/SwalSuccess.png',
            imageAlt: 'Success Icon',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            window.location.href = "/accounts/login";
        })
    }
    function resetPassword() {

        var password = $('#new_password').val();
        var confirmPassword = $('#confirm_password').val();
        var email = $("#email").val();
        var code = $("#code").val();

        var isPasswordValid = true;
        var lowerCaseLetters = /[a-z]/g;
        var upperCaseLetters = /[A-Z]/g;
        var numbers = /[0-9]/g;
        var nonAlphaNumaric = /[^a-zA-Z0-9]/g;

        if (password.length <= 5) {
            toastr.error('Password must be atleast 6 charactors long');
            isPasswordValid = false;
        }
        else if (!password.match(lowerCaseLetters)) {
            toastr.error('Password must contail atleast 1 lowercase letter');
            isPasswordValid = false;
        }
        else if (!password.match(upperCaseLetters)) {
            toastr.error('Password must contain atleast 1 upper letter');
            isPasswordValid = false;
        }
        else if (!password.match(numbers)) {
            toastr.error('Password must contain atleast 1 number');
            isPasswordValid = false;
        }
        else if (!password.match(nonAlphaNumaric)) {
            toastr.error('Password must contain atleast 1 non alphanumaric charactor');
            isPasswordValid = false;
        }
        else if (password.trim() != confirmPassword.trim()) {
            toastr.error('New password and confirm password must match');
            isPasswordValid = false;
        }

        if (isPasswordValid) {
            //var data = {};
            //data.password = password;
            loadHttpRequest("POST", '/Accounts/ResetPassword?email=' + email + '&password=' + password
                + '&code=' + code, updatePasswordHandler);
        }
    }

    $(".toggle-password").on('click', function () {
        $(this).toggleClass("fa-eye fa-eye-slash");
        var input = $($(this).attr("toggle"));
        if (input.attr("type") == "password") {
            input.attr("type", "text");
        } else {
            input.attr("type", "password");
        }
    });
</script>
