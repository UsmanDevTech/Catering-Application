<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Admin</title>
    <!-- Favicon title -->
    <link rel="shortcut icon" type="image/x-icon" href="~/images/cattering.png">

    <!-- Custom css-->
    <link rel="stylesheet" href="~/content/dist/css/poppinsFont.css">
    <link rel="stylesheet" href="~/content/dist/css/montserrat.css">

    <link rel="stylesheet" href="~/adminLTE/plugins/fontawesome-free/css/all.css">
    <link rel="stylesheet" href="~/adminLTE/plugins/fontawesome-free/css/fontawesome.css">

    <!-- Jquery-->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="~/adminLTE/plugins/jquery/jquery.js"></script>
    <script src="~/adminLTE/plugins/bootstrap/js/bootstrap.bundle.js"></script>

    <link rel="stylesheet" href="~/adminLTE/plugins/sweetalert2-theme-bootstrap-4/bootstrap-4.css">
    <link rel="stylesheet" href="~/adminLTE/plugins/toastr/toastr.css">

    <link rel="stylesheet" href="~/adminLTE/plugins/select2/css/select2.css">
    <link rel="stylesheet" href="~/adminLTE/plugins/select2-bootstrap4-theme/select2-bootstrap4.css">

    <!-- DataTables -->
    <link rel="stylesheet" href="~/adminLTE/plugins/datatables-bs4/css/dataTables.bootstrap4.css">
    <link rel="stylesheet" href="~/adminLTE/plugins/datatables-responsive/css/responsive.bootstrap4.css">
    <link rel="stylesheet" href="~/adminLTE/plugins/summernote/summernote-bs4.css">

    <!-- AdminLTE css -->
    <link rel="stylesheet" href="~/adminLTE/dist/css/adminlte.css">

    <link rel="stylesheet" href="~/content/Magnific-Popup-master/dist/magnific-popup.css">
    <link rel="stylesheet" href="~/content/plugins/light-gallery/css/lightgallery.css">

    <!-- Custom css-->
    <link rel="stylesheet" href="~/content/dist/css/Custom.css" />
    <link rel="stylesheet" href="~/content/dist/css/CircleBlick.css" />

    <!-- site Custom css-->
    <link rel="stylesheet" href="~/css/site.css" />

    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

    <style>
        /*        .dropdown-toggle::after {
                            display: none !important;
                        }*/

        .height-fitContent {
            height: fit-content !important;
        }

        a {
            color: #707070;
            text-decoration: none;
            background-color: transparent;
        }

        .font-07-rem {
            font-size: 0.7rem !important;
        }

        .nav-pills .nav-link.active, .nav-pills .show > .nav-link {
            color: #F15A29 !important;
            background-color: #fff !important;
            font-weight: bold !important;
        }

        .nav-pills .nav-link {
            color: #ffffff;
        }

            .nav-pills .nav-link:not(.active):hover {
                color: #F15A29 !important;
                background-color: #fff !important;
                border-radius: 50px 0 0 50px !important;
            }

        .nav-bar-title {
            color: white;
            font-size: 0.7rem !important;
        }

        .loading {
            position: fixed;
            z-index: 999;
            height: 2em;
            width: 2em;
            overflow: show;
            margin: auto;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
        }

            /* Transparent Overlay */
            .loading:before {
                content: '';
                display: block;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: radial-gradient(rgba(20, 20, 20,.8), rgba(0, 0, 0, .8));
                background: -webkit-radial-gradient(rgba(20, 20, 20,.8), rgba(0, 0, 0,.8));
            }

            /* :not(:required) hides these rules from IE9 and below */
            .loading:not(:required) {
                /* hide "loading..." text */
                font: 0/0 a;
                color: transparent;
                text-shadow: none;
                background-color: transparent;
                border: 0;
            }

                .loading:not(:required):after {
                    content: '';
                    display: block;
                    font-size: 10px;
                    width: 1em;
                    height: 1em;
                    margin-top: -0.5em;
                    -webkit-animation: spinner 150ms infinite linear;
                    -moz-animation: spinner 150ms infinite linear;
                    -ms-animation: spinner 150ms infinite linear;
                    -o-animation: spinner 150ms infinite linear;
                    animation: spinner 150ms infinite linear;
                    border-radius: 0.5em;
                    -webkit-box-shadow: rgba(255,255,255, 0.75) 1.5em 0 0 0, rgba(255,255,255, 0.75) 1.1em 1.1em 0 0, rgba(255,255,255, 0.75) 0 1.5em 0 0, rgba(255,255,255, 0.75) -1.1em 1.1em 0 0, rgba(255,255,255, 0.75) -1.5em 0 0 0, rgba(255,255,255, 0.75) -1.1em -1.1em 0 0, rgba(255,255,255, 0.75) 0 -1.5em 0 0, rgba(255,255,255, 0.75) 1.1em -1.1em 0 0;
                    box-shadow: rgba(255,255,255, 0.75) 1.5em 0 0 0, rgba(255,255,255, 0.75) 1.1em 1.1em 0 0, rgba(255,255,255, 0.75) 0 1.5em 0 0, rgba(255,255,255, 0.75) -1.1em 1.1em 0 0, rgba(255,255,255, 0.75) -1.5em 0 0 0, rgba(255,255,255, 0.75) -1.1em -1.1em 0 0, rgba(255,255,255, 0.75) 0 -1.5em 0 0, rgba(255,255,255, 0.75) 1.1em -1.1em 0 0;
                }

        /* Animation */

        @@-webkit-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @@-moz-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @@-o-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @@keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        .page-item.active .page-link {
            z-index: 3;
            color: #fff;
            background-color: #010C80;
            border-color: #010C80;
        }

        .btn-Mytheme {
            color: #fff;
            background-color: #010C80;
            border-color: #707070;
            padding-right: 20px;
            padding-left: 20px;
            border-radius: 10px;
            font-family: PoppinsFontmedium;
            font-size: 12px;
        }

            .btn-Mytheme:hover {
                color: #fff;
                border-color: #707070;
                text-decoration: none;
                background-color: #010a66;
            }

        .btn-white-eye {
            color: white;
            background-color: #77D4FC;
            border-radius: 0.4rem;
        }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .horizontal-ellipsis {
            font-size: 20px;
            cursor: pointer;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: white;
            border: 1px solid #ddd;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

            .dropdown-content a {
                display: block;
                padding: 10px;
                text-decoration: none;
                color: black;
            }

                .dropdown-content a:hover {
                    background-color: #f1f1f1;
                }

        .Alergies {
            background-color: #ADE6FF;
            border-radius: 30px;
            padding-right: 20px;
            padding-left: 20px;
            padding-top: 7px;
            padding-bottom: 7px;
            margin-left: 14px;
            margin-top: 5px;
        }

        .btnnew {
            background-color: #010C80;
            border-radius: 10px;
            height: 45px;
            width: 92px;
        }

        .cross {
            cursor: pointer;
            border-radius: 20px;
            border: 1px solid #1A1A1A;
            padding: 1px 6px !important;
            margin-top: 0px !important;
            margin-right: 0px !important;
            font-weight: bold !important;
        }

        .class3 {
            width: 175px;
            height: 48px;
            border-radius: 20px;
            font-family: 'PoppinsFont' !important;
            font-size: 15px;
            margin-top: 20px;
        }

        .btnspec {
            width: 174px !important;
            height: 45px;
            border-radius: 24px;
            font-family: Open_SansBold !important;
            font-size: 15px;
            padding-right: 11px;
            padding-left: 11px;
            width: 80%;
        }

        .cursor {
            cursor: pointer;
            position: absolute;
            top: 14px;
            right: 16px;
        }

        .cursor1 {
            position: absolute;
            top: 15px;
            width: 21px;
        }

        .custom-margin {
            margin-top: 14px;
            margin-left: 10px;
        }
        /*.btn:hover {
                                     text-decoration: none;
                                    background-color: orange;
                                }*/

        thead.no-wrap {
            white-space: nowrap !important;
        }

        .card {
            width: 100%;
            border-radius: 12px; /* Set a specific width or use a percentage */
            box-shadow: 0px 0px 22px 8px #eee !important;
        }

        .card-body {
            overflow-x: auto;
        }

        .padding20 {
            padding: 7px 20px;
        }

        .btn-width {
            width: 70px;
        }

        .btnadjust {
            width: 200px;
            height: 48px;
            border-radius: 20px;
            font-family: Open_SansBold;
            font-size: 15px;
            margin-top: 40px;
        }

        .spanGreen {
            border-radius: 6px;
            background-color: #00BF33;
            color: #ffffff;
            padding: 8px;
        }

        .spanRed {
            border-radius: 4px;
            background-color: #ff0000;
            color: #ffffff;
            padding: 7px;
        }

        .spanRed1 {
            border-radius: 12px;
            background-color: #8692A4;
            color: #ffffff;
            padding: 7px;
        }

        a {
            cursor: pointer;
        }

        .fa-edit {
            color: #fff;
        }

        .btn-theme2 {
            color: #fff;
            background-color: #010C80;
            border-color: #707070;
            font-family: 'PoppinsFont' !important;
        }
        /* Styling for the image container
                                .image-container {
                                    border: 2px dashed #ccc;
                                    padding: 10px;
                                    text-align: center;
                                }
                                /* Styling for the video container */
        .video-container {
            border: 2px dashed #ccc;
            padding: 10px;
        }

        table.table-bordered.dataTable tbody th,
        table.table-bordered.dataTable tbody td {
            font-size: 0.9rem;
        }

        table.dataTable > thead > tr > th:not(.sorting_disabled),
        table.dataTable > thead > tr > td:not(.sorting_disabled) {
            font-size: 0.9rem;
        }

        /*/ styles.css /*/
        .dropdown {
            position: relative;
            display: inline-block;
        }

        .horizontal-ellipsis {
            font-size: 20px;
            cursor: pointer;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: white;
            border: 1px solid #ddd;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

            .dropdown-content a {
                display: block;
                padding: 10px;
                text-decoration: none;
                color: black;
            }

                .dropdown-content a:hover {
                    background-color: #f1f1f1;
                }



        .btn-Mytheme {
            color: #fff;
            background-color: #010C80;
            border-color: #707070;
        }

        .managermodel {
            display: block;
            width: 100%;
            height: calc(2.25rem + 2px);
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            font-weight: 400;
            line-height: 1.5;
            color: #495057;
            background-color: #f7f8fc;
            background-clip: padding-box;
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
            box-shadow: inset 0 0 0 rgba(0, 0, 0, 0);
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

        .btn-theme2 {
            color: #fff;
            background-color: #010C80;
            border-color: #707070;
            font-family: 'PoppinsFont' !important;
        }

        .btn-theme3 {
            color: #fff;
            background-color: #EBEBEB;
            /*border-color: #707070;*/
            font-family: 'PoppinsFont' !important;
            color: black;
        }

        .btn-theme2:hover {
            color: #fff;
            border-color: #707070;
            text-decoration: none;
        }

        .btnstyle {
            height: 39px;
            width: 90px;
            padding-top: 7px;
            font-size: 14px;
            font-family: 'Gelion';
        }


        .classcss {
            height: 35px;
            font-size: 13px;
            width: 100px;
            padding: 5px;
            font-family: PoppinsFont !important;
            color: #9e9e9c !important;
            border-radius: 10px;
        }

        .btn:not(:disabled):not(.disabled) {
            cursor: pointer;
        }

        .btn:hover {
            /*  color: black !important; */
            text-decoration: none;
        }

        .btnmanager {
            float: right;
            font-family: PoppinsFontmedium;
            font-size: 14px;
            border: none;
            padding: 12px 48px;
        }

        .btnmanager1 {
            float: right;
            /*height: 68%;*/
            font-family: PoppinsFontmedium;
            font-size: 12px;
            border-radius: 20px;
            border: none;
            padding-left: 42px;
            padding-right: 45px;
            padding-top: 10px;
            padding-bottom: 9px;
        }

        .vertical-line {
            border-left: 2.5px solid #26BDF4;
            font-size: 1rem;
        }

        .swal2-close {
            padding: 0px;
        }

        td {
            vertical-align: middle !important;
            padding: 16px !important;
        }

        .selectedButton {
            background-color: #77D4FC !important;
            color: #010C80 !important;
        }

        .rejectedButton {
            background-color: #ef2323 !important;
            color: #fff !important;
        }

        .dropdown-item.active, .dropdown-item:active {
            background-color: #f8f9fa;
            color: black;
        }

        .form-control {
            background-color: #f7f8fc !important;
        }

        .close {
            border-radius: 60%;
            border: 1px solid #1A1A1A;
            padding: 1px 6px !important;
            margin: 0px !important;
        }

        .text-muted {
            color: #6c757d82 !important;
            font-family: PoppinsFont !important;
        }

        .spandefault {
            background-color: #A9B6C9;
            color: #fff;
        }

        .user-block img {
            float: left;
            height: 32px !important;
            width: 32px !important;
            margin-top: -2px;
        }

        .user-block .username, .user-block .description, .user-block .comment {
            display: block;
            margin-left: 40px;
        }

        h3 {
            font-family: 'PoppinsFont';
            font-weight: 600;
        }

        td, input {
            font-family: 'PoppinsFontmedium';
        }

        th {
            font-family: 'PoppinsFont' !important;
        }

        .form-control {
            background-color: #f7f8fc !important;
        }

        label {
            font-family: PoppinsFont !important;
        }

        .labelStyle {
            font-family: PoppinsFontmedium !important;
            font-size: 10px !important;
            line-height: 0.5;
        }

        .modal-title {
            font-family: 'PoppinsFont' !important;
            font-weight: 600;
        }

        .swal2-popup.swal2-toast .swal2-title {
            margin: 0.5em 1em !important;
            color: #6c757d;
        }

        .actionBtn {
            border: 1px solid #f3f3f3;
            padding: 2px 6px;
            background: #f3f3f3;
            border-radius: 5px;
            font-weight: bold;
            background: #f3f3f3;
            color: #000000;
        }

        .close {
            font-weight: 500 !important;
        }

        .width-70 {
            width: 70px !important;
        }

/*         @@media (min-width: 992px) {
            .modal-lg, .modal-xl {
                max-width: 700px !important;
            }
        } */
    </style>

</head>

<body class="sidebar-mini layout-fixed navbar-fixed-top" style="background: #f9f9fb;">
    <div class="wrapper" style="background: #f9f9fb;">
        <div id="showLoaderApi" style="background: #f9f9fb;"></div>
        <div class="preloader flex-column justify-content-center align-items-center" style="background: #f9f9fb;">
            <img class="animation__shake" src="~/images/cattering.png" alt="WarrenCateringApp App Loader" height="50">
        </div>
        <!-- Top bar navigation partial-->
        <partial name="_TopNavigationPartial" />
        <!-- Top side navigation partial-->
        <partial name="_SidebarNavigationPartial" />
        <!-- Dynamic content body-->
        <div class="content-wrapper" style="background: #f9f9fb;">
            <section class="content" style="background: #f9f9fb;">
                @RenderBody()
            </section>
        </div>
    </div>
    <script src="~/adminLTE/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/adminLTE/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/adminLTE/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/adminLTE/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/adminLTE/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/adminLTE/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>

    <script src="~/content/plugins/light-gallery/js/lightgallery-all.min.js"></script> <!-- Light Gallery Plugin Js -->

    <script src="~/content/Magnific-Popup-master/dist/jquery.magnific-popup-init.js"></script>
    <script src="~/content/Magnific-Popup-master/dist/jquery.magnific-popup.min.js"></script>

    <script src="~/adminLTE/plugins/toastr/toastr.min.js"></script>
    <script src="~/adminLTE/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/adminLTE/plugins/select2/js/select2.full.min.js"></script>

    <script src="~/adminLTE/dist/js/adminlte.min2167.js"></script>

    <script src="~/adminLTE/plugins/summernote/summernote-bs4.min.js"></script>

    <script>
        $(function () {
            var url = window.location;
            // for single sidebar menu
            $('ul.nav-sidebar a').filter(function () {
                return this.href == url;
            }).addClass('active');

            // for sidebar menu and treeview
            $('ul.nav-treeview a').filter(function () {
                return this.href == url;
            }).parentsUntil(".nav-sidebar > .nav-treeview")
                .css({ 'display': 'block' })
                .addClass('menu-open').prev('a')
                .addClass('active');

            ////enable Bootstrap tooltips
            //$('[data-toggle="tooltip"]').tooltip();
        });

        var table;
        function initGeneralDatatable(tableId, url, columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            alert(xhr.statusText);
                            alert(xhr.responseText);
                            console.error(xhr.statusText + xhr.responseText);
                        }

                    },
                    "scrollY": 400,
                    "scrollX": true,
                    order: order,
                    "columnDefs": columnDefs,
                    "columns": columns
                });

            //$('[data-toggle="tooltip"]').tooltip();
        }

        function initGeneralDatatableByHotel(tableId, url, columns, order, columnDefs, hotelId) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            alert(xhr.statusText);
                            alert(xhr.responseText);
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {

                            // Append to data
                            data.hotelId = hotelId;
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    order: order,
                    "columnDefs": columnDefs,
                    "columns": columns
                });

            //$('[data-toggle="tooltip"]').tooltip();
        }

        function initDatatable(tableId, url, statusInputId, pageStatusTitleId, columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {
                            // Read values
                            var status = $(statusInputId).val();

                            // Append to data
                            data.status = status;

                            // Change title
                            var intStatus = parseInt(status);
                            if (intStatus == 0) {
                                $(pageStatusTitleId).html("All")
                            }
                            else if (intStatus == 1) {
                                $(pageStatusTitleId).html("Active")
                            }
                            else if (intStatus == 2) {
                                $(pageStatusTitleId).html("Blocked")
                            }
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    dom: 'Bfrtip',
                    order: order,
                    buttons: [
                        {
                            text: 'All',
                            className: 'btn classcss',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("0");
                                table.draw();
                            }
                        },
                        {
                            text: 'Active',
                            className: 'btn btn-theme3 classcss',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("1");
                                table.draw();
                            }
                        },
                        {
                            text: 'Blocked',
                            className: 'btn btn-theme3 classcss',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("2");
                                table.draw();
                            }
                        }
                        //{
                        //    text: 'Refresh',
                        //    className: 'btn-default btn-sm',
                        //    action: function (e, dt, node, config) {
                        //        dt.clear().draw();
                        //        dt.ajax.reload();
                        //    }
                        //}
                    ],
                    "columnDefs": columnDefs,
                    "columns": columns
                });
        }

        function initGeneralDatatableByStatus(tableId, url, columns, order, columnDefs, statusId) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            alert(xhr.statusText);
                            alert(xhr.responseText);
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {

                            // Append to data
                            data.status = statusId;
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    order: order,
                    "columnDefs": columnDefs,
                    "columns": columns
                });

            //$('[data-toggle="tooltip"]').tooltip();
        }


        function initGeneralDatatableByOrders(tableId, url, columns, order, columnDefs, statusId, companyIds, chefIds) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            alert(xhr.statusText);
                            alert(xhr.responseText);
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {

                            // Append to data
                            data.status = statusId;
                            data.companyIds = companyIds;
                            data.chefIds = chefIds;
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    order: order,
                    "columnDefs": columnDefs,
                    "columns": columns
                });

            //$('[data-toggle="tooltip"]').tooltip();
        }


        function initDatatableByHotel(tableId, url, statusInputId, pageStatusTitleId, columns, order, columnDefs, hotelId) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {
                            // Read values
                            var status = $(statusInputId).val();

                            // Append to data
                            data.status = status;

                            data.hotelId = hotelId;

                            // Change title
                            var intStatus = parseInt(status);
                            if (intStatus == 0) {
                                $(pageStatusTitleId).html("All")
                            }
                            else if (intStatus == 1) {
                                $(pageStatusTitleId).html("Active")
                            }
                            else if (intStatus == 2) {
                                $(pageStatusTitleId).html("Blocked")
                            }
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    dom: 'Bfrtip',
                    order: order,
                    buttons: [
                        {
                            text: 'All',
                            className: 'btn-sm',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("0");
                                table.draw();
                            }
                        },
                        {
                            text: 'Active',
                            className: 'btn-success btn-sm',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("1");
                                table.draw();
                            }
                        },
                        {
                            text: 'Blocked',
                            className: 'btn-danger btn-sm',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("2");
                                table.draw();
                            }
                        },
                        {
                            text: 'Refresh',
                            className: 'btn-default btn-sm',
                            action: function (e, dt, node, config) {
                                dt.clear().draw();
                                dt.ajax.reload();
                            }
                        }
                    ],
                    "columnDefs": columnDefs,
                    "columns": columns
                });
        }

        function initStadiumDatatable(tableId, url, statusInputId, pageStatusTitleId, columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {
                            // Read values
                            var status = $(statusInputId).val();

                            // Append to data
                            data.status = status;
                            var intStatus = parseInt(status);
                            if (intStatus === 0) {
                                $(pageStatusTitleId).html("All")
                            }
                            else if (intStatus === 1) {
                                $(pageStatusTitleId).html("Approved")
                            }
                            else if (intStatus == 2) {
                                $(pageStatusTitleId).html("Pending")
                            }
                            else if (intStatus == 3) {
                                $(pageStatusTitleId).html("Rejected")
                            }
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    dom: 'Bfrtip',
                    order: order,
                    buttons: [
                        {
                            text: 'All',
                            className: 'mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("0");
                                table.draw();
                            }
                        },
                        {
                            text: 'Approved',
                            className: 'btn-success mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("1");
                                table.draw();
                            }
                        },
                        {
                            text: 'Pending',
                            className: 'btn-warning mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("2");
                                table.draw();
                            }
                        },
                        {
                            text: 'Rejected',
                            className: 'btn-danger mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("3");
                                table.draw();
                            }
                        },
                        {
                            text: 'Refresh',
                            className: 'btn-default mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                dt.clear().draw();
                                dt.ajax.reload();
                            }
                        }
                    ],
                    "columnDefs": columnDefs,
                    "columns": columns
                });
        }
        function initDrillDatatable(tableId, url, statusInputId, pageStatusTitleId, columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {
                            // Read values
                            var status = $(statusInputId).val();

                            // Append to data
                            data.status = status;
                            var intStatus = parseInt(status);
                            if (intStatus == 0) {
                                $(pageStatusTitleId).html("All")
                            }
                            else if (intStatus == 1) {
                                $(pageStatusTitleId).html("Active")
                            }
                            else if (intStatus == 2) {
                                $(pageStatusTitleId).html("Inactive")
                            }
                            else if (intStatus == 3) {
                                $(pageStatusTitleId).html("Draft")
                            }
                            else if (intStatus == 4) {
                                $(pageStatusTitleId).html("Expired")
                            }
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    dom: 'Bfrtip',
                    order: order,
                    buttons: [
                        {
                            text: 'All',
                            className: 'mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("0");
                                table.draw();
                            }
                        },
                        {
                            text: 'Active',
                            className: 'btn-success mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("1");
                                table.draw();
                            }
                        },
                        {
                            text: 'Inactive',
                            className: 'btn-primary mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("2");
                                table.draw();
                            }
                        },
                        {
                            text: 'Draft',
                            className: 'btn-warning text-white mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("3");
                                table.draw();
                            }
                        },
                        {
                            text: 'Expired',
                            className: 'btn-danger mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("4");
                                table.draw();
                            }
                        },
                        {
                            text: 'Refresh',
                            className: 'btn-default mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                dt.clear().draw();
                                dt.ajax.reload();
                            }
                        }
                    ],
                    "columnDefs": columnDefs,
                    "columns": columns
                });
        }
        //Simple table
        function initSimpleDatatable(tableId, url, columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                }).DataTable({
                    fixedHeader: true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "GET",
                        "dataSrc": "result",
                        "error": function (xhr) {
                            // if error occured
                            console.error(xhr.statusText + xhr.responseText);
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    order: order,
                    "columnDefs": columnDefs,
                    "columns": columns
                });
        }
    </script>
    <script>
        const loaderDiv = document.getElementById('showLoaderApi');
        var Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        function loadHttpRequest(method, url, cFunction, params) {
            loaderDiv.innerHTML = '<div class="loading">Loading&#8230;</div>';
            var xhttp;
            xhttp = new XMLHttpRequest();

            xhttp.addEventListener("load", transferComplete);
            xhttp.addEventListener("error", transferFailed);
            xhttp.addEventListener("abort", transferCanceled);

            xhttp.onreadystatechange = function () {

                if (this.readyState == 4 && this.status == 200) {
                    const objModel = JSON.parse(this.responseText);
                    if (objModel.status) {
                        cFunction(objModel.result)
                    }
                    else {
                        toastr.error(objModel.result)
                    }
                }
            };
            xhttp.open(method, url, true);
            xhttp.setRequestHeader("Content-type", "application/json");
            xhttp.send(params);
        }
        function transferComplete(evt) {
            var response = JSON.parse(evt.currentTarget.responseText);

            if (!response.status) {
                toastr.error(response.result)
            }
            else if (response.status != 200) {
                if (response.errors != null) {
                    toastr.error(JSON.stringify(response.errors));
                }

            }
            else {
                console.error("Error! ", JSON.parse(evt.currentTarget.responseText));
            }
            loaderDiv.innerHTML = '';
        }
        function transferFailed(evt) {
            console.error("transferFailed", JSON.parse(evt.currentTarget.responseText));
            var response = JSON.parse(evt.currentTarget.responseText);

            if (!response.status) {
                toastr.error(response.result)
            }
        }
        function transferCanceled(evt) {
            console.error("transferCanceled", JSON.parse(evt.currentTarget.responseText));

            var response = JSON.parse(evt.currentTarget.responseText);

            if (!response.status) {
                toastr.error(response.result)
            }
        }
    </script>

    <!-- Helpers -->
    <script>

        function retureDayName(index) {
            switch (index) {
                case 1:
                    return "Monday"
                case 2:
                    return "Tuesday"
                case 3:
                    return "Wednesday"
                case 4:
                    return "Thursday"
                case 5:
                    return "Friday"
                case 6:
                    return "Saturday"
                case 7:
                    return "Sunday"
                default:
                    return "N/A"
            }
        }

        function convertTime24to12(time24h) {
            // Check correct time format and split into components
            time24h = time24h.toString().match(/^([01]\d|2[0-3])(:)([0-5]\d)(:[0-5]\d)?$/) || [time24h];

            if (time24h.length > 1) { // If time format correct
                time24h = time24h.slice(1);  // Remove full string match value
                time24h[5] = +time24h[0] < 12 ? ' AM' : ' PM'; // Set AM/PM
                time24h[0] = +time24h[0] % 12 || 12; // Adjust hours
            }
            return time24h.join(''); // return adjusted time or original string
        }

        function convertTime12to24(time12h) {
            const [time, modifier] = time12h.split(' ');

            let [hours, minutes] = time.split(':');

            if (hours === '12') {
                hours = '00';
            }

            if (modifier === 'PM') {
                hours = parseInt(hours, 10) + 12;
            }

            return `${hours}:${minutes}`;
        }

        function CheckNullUndefined(value) {
            return typeof value == 'string' && !value.trim() || typeof value == 'undefined' || value === null;
        }
    </script>
</body>

</html>

