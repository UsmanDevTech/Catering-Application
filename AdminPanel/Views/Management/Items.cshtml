<style>
    .dropdown-item.active, .dropdown-item:active {
        background-color: #f8f9fa;
        color:black;
    }
    .dropopen{
        min-width:0px;
    }
</style>

<div class="container-fluid">
    <h3>
        <span class="vertical-line mr-2"></span>
        Menu
    </h3>
    <div class="card mt-3" style="border-radius: 15px;">
        <div class="card-body">
            <div class="row">
                <div class="buttons col-sm-6 col-md-6">
                    <button class="btn btn-theme3 mt-1 btnstyle classcss selectedButton" id="btn-1" data-statusId="0">All</button>
                    <button class="btn btn-theme3 mt-1 btnstyle classcss" id="btn-2" data-statusId="1">Active</button>
                    <button class="btn btn-theme3 mt-1 btnstyle classcss" id="btn-3" data-statusId="2">Block</button>
                </div>
                <div class="col-sm-6 col-md-6">
                    <button type="button" class="btn btn-theme2 btnmanager rounded-pill mt-1" style="background-color : #010C80" id="btn-item"> + Add Item </button>

                </div>
            </div>
        </div>
        <div class="table-responsive" style="padding:0px 25px 25px 25px;">

            <table class="table table-bordered w-100 no-wrap" id="table-item">
                <thead>
                    <tr class="table-active">
                        <th>Id</th>
                        <th>
                        Sr #
                        </th>
                        <th>
                            Item Name
                        </th>

                        <th>
                            Date
                        </th>

                        <th style="text-align:center;">
                            Status
                        </th>
                        <th style="text-align:center;">
                            Action
                        </th>
                    </tr>

                </thead>
                <tbody>
                    <tr>
                        <td>
                        001
                        </td>
                        <td>
                            Meat balls grill chicken
                        </td>

                        <td class="no-wrap">
                            12 Aug 2023 11:00 am
                        </td>
                        <td>
                            <span class="spanGreen" id="active-id"> Active</span>
                            <span class="spanRed d-none" id="block-id"> Block</span>

                        </td>
                        <td class="no-wrap" style="text-align:center;">
                            <div class="dropdown">
                                <div class="horizontal-ellipsis">&#8942;</div>
                                <div class="dropdown-content">

                                    <a href="#" id="btn-edit" value="Edit">Edit</a>
                                    <a href="#" id="btn-unblock" value="unblock">Active</a>
                                    <a href="#" id="btn-block" value="block">Block</a>

                                </div>
                            </div>

                        </td>

                    </tr>
                </tbody>
            </table>
        </div>
    </div>

</div>
<div class="modal fade" id="item-modal" role="dialog">
    <div class="modal-dialog modal-md modal-dialog-centered">
        <!-- Modal content-->
        <div class="modal-content" style="border-radius: 30px;">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-overlay-title">Heading</h5>
                <a class="close" data-dismiss="modal" aria-label="Close">
                    &times;
                </a>
@*                <span class="close" style="cursor : pointer;" id="close-id6">&times;</span> *@

            </div>
            <div class="modal-body justify-content-center p-4">


                <form>
                    <div class="form-group">
                        <input type="hidden" id="bodyId" name="id" />
                        <label for="itemName">Item Name</label>
                        <input type="text" class="form-control" id="itemName" style="height: 50px; border-radius: 7px;" placeholder="Type Item name" maxlength="30">

                    </div>

                    <div class="form-group text-center">

                        <button id="addButton" type="button" width="width : 80%" class="btn btn-theme2 class3 rounded-pill" onclick="addItem()">Save</button>
                        <button id="editButton" type="button" width="width : 80%" class="btn btn-theme2 class3 rounded-pill d-none" onclick="updateItem()">Save</button>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>
<input type="hidden" id="statusType" value="0" />
<script>

    / script.js /
    $(document).ready(function () {
        $("#nav-menu").addClass("active");
        // for changing image for HTMLMenuElement
        $('#menu-img-white, #menu-img').toggleClass('d-none');
        $('#btn-item').click(function () {
            $("#bodyId").val('');
            $("#itemName").val('');

            $("#modal-overlay-title").text("Add Item");
            $("#editButton").addClass("d-none");
            $("#addButton").removeClass("d-none");

            $('#item-modal').modal('show');
        });
        $('#close-id6').click(function () {
            $('#item-modal').modal('hide');
        });
        $('#d-table3').DataTable();

        $(".horizontal-ellipsis").click(function () {
            $(".dropdown-content").toggle();
        });

        $(document).click(function (event) {
            if (!$(event.target).closest(".dropdown").length) {
                $(".dropdown-content").hide();
            }
        });
    });

    $(function () {

        var columns = [
            {
                "data": "id",
                "name": "id"
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, type, row, meta) {
                    // Get the current page number
                    var currentPage = $('#table-item').DataTable().page.info().page;

                    // Calculate the index based on the page and row
                    var globalIndex = meta.row + currentPage * meta.settings._iDisplayLength + 1;

                    // Format the index with leading zeros (e.g., 001, 002, 003)
                    var formattedIndex = ("000" + globalIndex).slice(-3);

                    // Display the formatted index
                    return formattedIndex;
                }
            },
            {
                "data": "name",
                "name": "name",
                "render": function (data, row, payload) {
                    return '<span>' + data + '</span>';
                }
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, row, payload) {
                    return '<span>' + payload.createdAt + '</span>';
                }
            },
            {
                "data": "isDeleted",
                "name": "isDeleted",
                "render": function (data, row, payload) {
                    if (data == false) {
                        return '<div style="text-align:center;"><span class="bg-success rounded py-1 px-2">Active</span></div>';
                    }
                    else {
                        return '<div style="text-align:center;"><span class="bg-danger rounded py-1 px-2">Block&nbsp;</span></div>';
                    }
                }
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, row, payload) {
                    if (payload.isDeleted == false) {
                        return `<div class="no-wrap"style="text-align:center;">
                        <div class="dropdown show">
                                              <a class="dropdown actionBtn" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-ellipsis-h"></i>
                                          </a>
                                          <div class="dropdown-menu dropopen" aria-labelledby="dropdownMenuLink">
                                                <a class="dropdown-item cursor-pointer" id="editBtn" onclick="showUpdateModal(${data})" data-itemId=${data}>Edit</a>
                                                <a class="dropdown-item cursor-pointer" id="deleteBtn" data-itemId=${data} data-status=${0}>Block</a>
                                          </div>
                                        </div>
                                        </div>`;
                    }
                    else {
                        return `<div class="no-wrap"style="text-align:center;">
                        <div class="dropdown show">
                                              <a class="dropdown actionBtn" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-ellipsis-h"></i>
                                          </a>
                                          <div class="dropdown-menu dropopen" aria-labelledby="dropdownMenuLink">
                                                <a class="dropdown-item cursor-pointer" id="deleteBtn" data-itemId=${data} data-status=${1}>Active</a>
                                          </div>
                                        </div>
                                        </div>`;
                    }
                }
            }
        ];

        var order = [[0, "desc"]];
        var columnDefs = [{
            "targets": [0],
            "visible": false,
            "searchable": false
        }];

        //Init General Datatable
        initGeneralDatatable('#table-item', '/pagination/getTableData/1', columns, order, columnDefs);
        //initDatatable('#table-item', '/pagination/getTableData/1', '#statusType', '#pageTitleFilter', columns, order, columnDefs);

        //status button click functionality
        $('.buttons .btn-theme3').click(function () {
            let statusId = $(this).attr('data-statusId');
            console.log(statusId);

            $('.btn-theme3').removeClass('selectedButton');
            $(this).addClass('selectedButton');

            //generating table according to branch
            initGeneralDatatableByStatus('#table-item', '/pagination/getTableData/1', columns, order, columnDefs, statusId);
        });
    });

    //Soft Delete Feature
    $('#table-item tbody').on('click', '[id*=deleteBtn]', function () {
        //Get Row Data
        var data = table.row($(this).parents('tr')).data();

        var itemId = $(this).attr("data-itemId");
        var status = parseInt($(this).attr("data-status"));

        var title, confirmButtonText;

        if (status == 1) {
            title = 'Are you sure, you want to unblock this item?';
            confirmButtonText = 'Yes, Unblock it!';
        }
        else {
            title = 'Are you sure, you want to block this item?';
            confirmButtonText = 'Yes, Block it!';
        }

        swal.fire({
            title: title,
            icon: 'warning',
            allowOutsideClick: false,
            showCloseButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            showCancelButton: true,
            confirmButtonText: confirmButtonText
        }).then((result) => {
            if (result.isConfirmed) {
                loadHttpRequest("POST", "/Management/SoftDelete?id=" + itemId + "&isDeleted=" + status, softDeleteCallback);
            }
            else if (result.dismiss === Swal.DismissReason.cancel) {
                // Code to execute if "Cancel" is clicked
            }
        });
    });

    function softDeleteCallback(response) {
        Swal.fire({
            title: 'Successful',
            text: 'Status updated successfully.',
            icon: 'success',
            //imageUrl: '/content/dist/img/SwalSuccess.png',
            //imageAlt: 'Success Icon',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            table.draw();
        })
    }

    function addItem() {
        var executeHttpRequest = true;
        var name = $("#itemName").val();

        //check field name
        if (CheckNullUndefined(name)) {
            Toast.fire({ icon: 'warning', title: 'Name is Required' });
            executeHttpRequest = false;
        }

        if (executeHttpRequest == true) {

            var data = {};
            data.name = name;
            loadHttpRequest("POST", "/Management/ItemCreate", createItemHandler, JSON.stringify(data));
        }
    }

    function createItemHandler(evt) {
        Swal.fire({
            title: 'Item Created successfully',
            icon: 'success',
            //imageUrl: '/content/dist/img/SwalSuccess.png',
            //imageAlt: 'Success Icon',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            table.draw();
            $("#item-modal").modal('hide');
        })
    }

    //Update Feature
    function showUpdateModal(itemId) {
        //var categoryId = $(this).attr("data-categoryId");
        $("#bodyId").val(itemId);
        //alert($("#bodyId").val());
        $.ajax({
            type: 'GET',
            url: '/Management/GetItem?itemId=' + itemId,
            async: true,
            processData: false,
            contentType: false,
            success: function (res) {
                $("#itemName").val(res.name);
            },
            error: function (error) {
                return error;
            },
        });

        //change modal title
        $("#modal-overlay-title").html("Edit Item");

        //show button
        $("#addButton").addClass("d-none");
        $("#editButton").removeClass("d-none");

        //show modal
        $("#item-modal").modal("toggle");
    }

    function updateItem() {
        var Id = $("#bodyId").val();

        var executeHttpRequest = true;
        var name = $("#itemName").val();

        //check field name
        if (CheckNullUndefined(name.trim())) {
            Toast.fire({ icon: 'warning', title: 'Name is required' });
            executeHttpRequest = false;
        }

        if (executeHttpRequest == true) {
            var data = {};
            data.id = Id;
            data.name = name;

            loadHttpRequest("PUT", "/Management/Update", updateItemCallback, JSON.stringify(data));
        }

    }

    function updateItemCallback(response) {
        Swal.fire({
            title: 'Successful',
            text: 'Item Updated Successfully.',
            icon: 'success',
            //imageUrl: '/content/dist/img/SwalSuccess.png',
            //imageAlt: 'Success Icon',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            $("#item-modal").modal('hide');
            table.draw();
        })
    }

</script>