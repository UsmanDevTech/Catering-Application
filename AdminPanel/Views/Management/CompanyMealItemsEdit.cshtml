
<style>
    .label {
        font-family: PoppinsFontmedium;
    }

    .card1 {
        box-shadow: 0 0 1px rgba(0, 0, 0, 0.125), 0 1px 3px rgba(0, 0, 0, 0.0);
        margin-bottom: 1rem;
    }

    .item-option {
        display: flex;
        align-items: center; /* Center vertically */
        justify-content: space-between;
    }

        /* Style the label and checkbox */
        .item-option label {
            margin-right: 10px; /* Add space between label and checkbox */
        }

    .modal-header div {
        margin-bottom: 10px; /* Add margin to create space between div elements */
    }

    a {
        color: #1F2D3D;
        text-decoration: none;
        background-color: transparent;
    }

    .adjust {
        position: absolute;
        width: 17px;
        height: 17px;
        top: 47px;
        right: 17px;
    }

    .checkbox-item {
        width: 20px;
        height: 16px;
        /*        position: absolute;
            top: 4px;
            left: 205px;*/
    }

    .arrow {
        position: absolute;
        top: 71px;
        cursor: pointer;
    }

    .selected-meals {
        border: 1px solid #ccc;
        padding: 10px;
        margin-top: 10px;
    }

    .btn-category {
        font-size: 14px;
        font-family: PoppinsFont;
        border-radius: 10px;
        color: #5F5F5F;
        background-color: #EBEBEB;
    }

    .active-category {
        color: #010C80;
        background-color: #26BDF4;
    }
</style>

<div class="container-fluid">
    <a href="/Management/CompanyMealsEdit" class="arrow-link">
        <i class="fa fa-arrow-left arrow" aria-hidden="true"></i>
        <h3 style="margin-left: 20px;">@TempData.Peek("mealTypeName-edit")</h3>
    </a>
    <div class="card" style="border-radius: 15px;">
        <div class="card-body" style="min-height:450px">
            <div class="container-fluid">

                <div class="row">
                    <div class="col-md-3">
                        <h3>@TempData.Peek("companyName-edit")</h3>
                    </div>
                    <div class="col-md-9" id="buttons">
                        <button type="button" class="btnmanager1 no-wrap" style="background-color : #010C80; color:#fff" id="btn-add-items">+ Add Items</button>
                        @*<button type="button" class="btnmanager1 no-wrap mr-2" style="background-color : #77D4FC; color:black" id="btn-save-all">Save</button>*@
                    </div>
                    <div class="row mt-2" style="margin-bottom:20px;">
                        <div class="col-md-12 category-buttons">
                          @*<button class="btn btn-category py-2 active-category" value="1" id="btn-1">Breakfast choice</button>
                            <button class="btn btn-category py-2" value="2" id="btn-2">Breakfast Side</button>*@
                        </div>
                    </div>
                </div>

                <div id="btn-hide" class="d-none">
                    <div class="row justify-content-center align-items-center text-center " style="margin-top : 60px;">
                        <div class="col">
                            <img src="~/Images/Group 2309661.png" alt="Your Image Alt Text" />
                        </div>
                    </div>
                    <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                        <div class="col">
                            <h4>No Items</h4>
                        </div>
                    </div>
                    <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                        <div class="col">
                            <p>The selected menu type doesn't have any   <br /> items added to it.</p>
                        </div>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="selected-items" class="row">
                    </div>
                </div>
            </div>

        </div>
    </div>

</div>

<!-- Add Items Modal -->
<div class="modal fade" id="add-items-modal" role="dialog">
    <div class="modal-dialog modal-md">
        <!-- Modal content-->
        <div class="modal-content" style="border-radius: 12px;">
            <div class="modal-header">
                <h5 class="pt-2">Add Items</h5>

                <span class="close cross" id="addItems-close">&times;</span>
            </div>
            <div class="modal-body">
                <!-- Search Field -->
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" style="background-color: #F7F8FC; border-radius: 12px;">

                            <select class="form-control form-control1" id="subcategory-options" style="background-color: #F7F8FC; border-radius : 10px; font-family: 'Gelionlight'; ">
                                <option value="0" disabled selected> Subcategory</option>
                                <option value="1">Breakfast choice </option>
                                <option value="2">Breakfast side</option>
                            </select>
                        </div>
                    </div>
                    <br />
                    <br />
                    <div class="col-md-6">
                        <div class="form-group">
                            <input type="text" class="form-control" id="searchInput" placeholder="Search" style="border-radius: 20px;">
                            <img src="~/Images/search-24px.png" style="position: absolute;top: 10px;right: 18px;" />
                        </div>
                    </div>
                </div>

                <div id="item-options-div" class="row">
                    <div class="col-md-6 item-option">
                        <label for="item-1">Pasta</label>
                        <input type="checkbox" class="checkbox-item" id="item-1">
                        <input type="hidden" class="item-id" value="1" />
                    </div>
                    <div class="col-md-6 item-option">
                        <label for="item-2">Tacos</label>
                        <input type="checkbox" class="checkbox-item" id="item-2">
                        <input type="hidden" class="item-id" value="2" />
                    </div>
                </div>

                <div class="form-group text-center">
                    <button width="width : 80%" style=" width: 228px; height: 43px; border-radius:41px; font-family: Open_SansBold;font-size: 15px; margin-top: 30px;" class="btn btn-theme2" id="items-save">
                       Next
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>

<script>

    //remove item
    function removeItem(button) {

        var card = button.closest('.itemDiv');

        if (card) {

            card.remove();

            //appends save button
            if ($('#btn-save-all').length < 1) {
                $('#buttons').append(
                    `<button type="button" class="btnmanager1 no-wrap mr-2" style="background-color : #77D4FC; color:black" onclick="saveAll()" id="btn-save-all">Save Changes</button>`
                );
            }

        }
    }

    function saveAll() {
        //gets selected items array
        const selectedItems = [];
        $('#selected-items input:hidden').each(function () {
            var data = {};
            data.itemId = $(this).val();
            data.categoryId = $(this).attr('data-categoryId');

            selectedItems.push(data);
        });
        console.log(selectedItems);

        loadHttpRequest("POST", "/Management/UpdateOrgMealItems", updateItemsHandler, JSON.stringify(selectedItems));
    }

    function updateItemsHandler(evt) {
        Swal.fire({
            title: 'Menu Updated Successfully',
            //text: 'Menu of the chosen day and meal has been updated successfully for the selected company',
            //imageUrl: '/content/dist/img/SwalSuccess.png',
            //imageAlt: 'Success Icon',
            icon: 'success',
            timer: 2000,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            window.location.href = "/Management/CompanyMealsEdit";
        })
    }

    $(document).ready(function () {

        //get orgMeal Categories
        $.ajax({
            type: "GET",
            url: "/Management/GetOrgMealCategories",
            dataType: "json",
            contentType: false,
            processData: false,
            success: function (res) {
                console.log(res);

                getOrgMealCatsHandler(res);
            },
            error: function (error) {
                loaderdiv.innerhtml = '';
                toastr.error("Error", error.message);
                return error;
            },
        });

        function getOrgMealCatsHandler(res) {
            console.log('category handler');

            //appends category options
            $("#add-items-modal #subcategory-options option:first").siblings().remove();

            for (let category of res) {
                $("#add-items-modal #subcategory-options").append(
                    `<option value="${category.id}">${category.name}</option>`
                );
            }

            //appends category tabs
            $('.category-buttons').empty();

            for (let category of res) {
                $(".category-buttons").append(
                    `<button class="btn btn-category py-2" value="${category.id}" >${category.name}</button>`
                );
            }

            //actives first category tab
            $('.btn-category').removeClass('active-category');
            $('.btn-category').first().addClass('active-category');

            //get orgMeal Items
            $.ajax({
                type: "GET",
                url: "/Management/GetOrgMealItems",
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (res) {
                    console.log(res);

                    getOrgMealItemsHandler(res);
                },
                error: function (error) {
                    loaderdiv.innerhtml = '';
                    toastr.error("Error", error.message);
                    return error;
                },
            });

        }

        function getOrgMealItemsHandler(res) {
            console.log('items handler');

            //appends items in div
            $('#selected-items').empty();
            for (let orgMealItem of res) {

                $('#selected-items').append(
                    `<div class="col-md-3 itemDiv d-none">
                        <div class="card card1" style="background-color: #F9F9FB;">
                            <div class="card-body row">
                                <label class="col-10 mb-0">${orgMealItem.name}</label>
                                <div class="col-2">
                                    <span class="close cross" onclick="removeItem($(this))">&times;</span>
                                    <input type="hidden" data-categoryId="${orgMealItem.orgMealCategoryId}" class="selected-item-id" value="${orgMealItem.itemId}" />
                                <div/>
                            </div>
                        </div>
                    </div>`
                );
            }

            //shows first tab items
            let firstCatId = $('.btn-category').first().val();
            $('.itemDiv').addClass('d-none');
            $('#selected-items input:hidden[data-categoryId=' + firstCatId + ']').each(function () {

                $(this).closest('.itemDiv').removeClass('d-none');

            });

            //category select logic
            $('.btn-category').click(function () {
                //button active
                $('button.active-category').removeClass('active-category')
                $(this).addClass('active-category');

                //items show
                $('.itemDiv').addClass('d-none');
                let catId = $(this).val();
                $('#selected-items input:hidden[data-categoryId=' + catId + ']').each(function () {

                    $(this).closest('.itemDiv').removeClass('d-none');

                });
            });

        }

        //Show Add Items Feature
        $('#btn-add-items').click(function () {

            //gets available items array
            const availableItems = [];
            $('#selected-items input:hidden').each(function () {
                availableItems.push($(this).val());
            });
            console.log(availableItems);

            $.ajax({
                type: "POST",
                url: "/Management/GetSelectiveItems",
                dataType: "json",
                contentType: "application/json",
                processData: false,
                data: JSON.stringify(availableItems),
                success: function (res) {
                    console.log(res);

                    //appends items in modal
                    $('#item-options-div').empty();

                    for (let item of res) {

                        $('#item-options-div').append(
                            `<div class="col-md-6 item-option">
                                <label for="item-${item.id}">${item.name}</label>
                                <input type="checkbox" class="checkbox-item" id="item-${item.id}" >
                                <input type="hidden" class="item-id" value="${item.id}" />
                            </div>`
                        );
                    }


                    // add event listener to handle checkbox change
                    $('.checkbox-item').change(function () {
                        let executeHandler = true;

                        //check
                        let selectedVal = $('#subcategory-options').val();
                        console.log(selectedVal);
                        if (selectedVal === null) {
                            Toast.fire({ icon: 'warning', title: 'Select a Subcategory first.' });
                            $(this).prop('checked', false); // Unchecks it
                            executeHandler = false;
                        }

                        if (executeHandler == true) {
                            handleCheckboxChange($(this), selectedVal);
                        }
                    });

                    // function to handle checkbox changes
                    function handleCheckboxChange(checkbox, categoryId) {
                        if (checkbox.is(':checked')) {
                            createCard(checkbox, categoryId);
                        }
                        else {
                            let text = checkbox.siblings('label').text();
                            // Remove the card if the checkbox is unchecked
                            $('#selected-items .itemDiv:contains(' + text + ')').remove();
                        }
                    }

                    // append selected items
                    function createCard(checkbox, categoryId) {
                        let label = checkbox.siblings('label').text();
                        let id = checkbox.siblings('input').val();

                        console.log(label);
                        console.log(id);

                        let activeButtonCategory = $('.active-category').val();

                        //with or without d-none
                        if (activeButtonCategory == categoryId){
                            $('#selected-items').append(
                                `<div class="col-md-3 itemDiv">
                                    <div class="card card1" style="background-color: #F9F9FB;">
                                        <div class="card-body row">
                                            <label class="col-10 mb-0">${label}</label>
                                            <div class="col-2">
                                                <span class="close cross" onclick="removeItem($(this))">&times;</span>
                                                <input type="hidden" data-categoryId="${categoryId}" class="selected-item-id" value="${id}" />
                                            <div/>
                                        </div>
                                    </div>
                                </div>`
                            );
                        }
                        else{
                            $('#selected-items').append(
                                `<div class="col-md-3 itemDiv d-none">
                                    <div class="card card1" style="background-color: #F9F9FB;">
                                        <div class="card-body row">
                                            <label class="col-10 mb-0">${label}</label>
                                            <div class="col-2">
                                                <span class="close cross" onclick="removeItem($(this))">&times;</span>
                                                <input type="hidden" data-categoryId="${categoryId}" class="selected-item-id" value="${id}" />
                                            <div/>
                                        </div>
                                    </div>
                                </div>`
                            );
                        }
                     
                    }

                },
                error: function (error) {
                    toastr.error("Error", error.message);
                    return error;
                },
            });

            //shows modal
            $('#add-items-modal').modal('show');

        });


        //close addItems modal
        $('#addItems-close').click(function () {

            $('#add-items-modal').modal('hide');
        });

        //save selected mealTypes
        $('#items-save').click(function () {

            let closeModal = true;

            //checks that all categories have items
            $('.btn-category').each(function () {
                let catId = $(this).val();
                //console.log(catId);

                let catItems = $('#selected-items input:hidden[data-categoryId=' + catId + ']').length;

                if (catItems < 1) {
                    Toast.fire({ icon: 'warning', title: 'You must select atleast 1 item for each Subcategory' });
                    closeModal = false;
                }

            });

            if (closeModal == true) {

                //actives first category
                $('.btn-category').removeClass('active-category');
                $('.btn-category').first().addClass('active-category');

                let firstCatId = $('.btn-category').first().val();
                $('.itemDiv').addClass('d-none');
                $('#selected-items input:hidden[data-categoryId=' + firstCatId + ']').each(function () {

                    $(this).closest('.itemDiv').removeClass('d-none');

                });

                //appends save button
                if ($('#btn-save-all').length < 1) {
                    $('#buttons').append(
                        `<button type="button" class="btnmanager1 no-wrap mr-2" style="background-color : #77D4FC; color:black" onclick="saveAll()" id="btn-save-all">Save</button>`
                    );
                }

                //hides modal
                $('#add-items-modal').modal('hide');
                $('#btn-hide').addClass('d-none');
            }



        });


    });
</script>

