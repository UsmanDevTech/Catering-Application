<style>

    .company {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 10px;
    }

    .company img {
        max-width: 100px;
        margin-right: 10px;
    }

    .company label {
        flex-grow: 1;
    }

    .company-checkbox {
        flex-shrink: 0;
    }

    hr {
        margin-top: 0rem;
        margin-bottom: 0rem;
        border: 0;
        border-top: 1px solid rgba(0, 0, 0, 0.1);
    }

    input[name=company]:checked::before {
        content: "";
        display: block;
        position: relative;
        text-align: center;
        height: 17px;
        width: 17px;
        background-color: #fff;
        color: #fff;
        font-family: "Montserrat";
        border-radius: 3px;
        border: 2px solid #77D4FC;
    }

    input[name=company]:checked::after {
        content: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="11" height="11" fill="skyBlue" viewBox="0 0 24 24"><path d="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z"/></svg>');
        display: block;
        position: relative;
        left: 3px;
        top: -20px;
    }

    input[type='checkbox'] {
        accent-color: #fff;
        position: relative;
        margin-right: 10px;
        width: 16px;
        height: 16px;
        top: 3px !important;
    }

    @@media(max-width:765px) {
        input[name=company]:checked::after {
            top: -18px !important;
        }
    }
</style>


<div class="container-fluid">
    <h3>
        <span class="vertical-line mr-2"></span>
        Chef
    </h3>
    <div class="card mt-4" style="border-radius: 15px;">
        <div class="card-body">
            <div class="row">
                <div class="buttons col-sm-6 col-md-6">
                    <button class="btn btn-theme3 mt-1 btnstyle classcss selectedButton" id="btn-1" data-statusId="0">All</button>
                    <button class="btn btn-theme3 mt-1 btnstyle classcss" id="btn-2" data-statusId="1">Active</button>
                    <button class="btn btn-theme3 mt-1 btnstyle classcss" id="btn-3" data-statusId="2">Block</button>
                </div>
                <div class="col-sm-6 col-md-6">
                    <button type="button" class="btn btn-theme2 btnmanager rounded-pill" style="background-color : #010C80" id="btn-chef"> + Create Chef </button>

                </div>
            </div>
        </div>
        <div class="table-responsive" style="padding:0px 25px 25px 25px;">

            <table class="table table-bordered no-wrap w-100" id="table-chefs">
                <thead>
                    <tr class="table-active">
                        <td>Id</td>
                        <th>
                            Sr #
                        </th>
                        <th>
                            Picture
                        </th>
                        <th>
                            Chef Name
                        </th>

                        <th>
                            Email
                        </th>

                        <th>
                            Phone Number
                        </th>
                        <th>
                            Date
                        </th>
                        <th>
                            Assigned Company
                        </th>

                        <th>
                            Status
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>

                </thead>
                <tbody>
                    <tr>
                        <td>
                            001
                        </td>
                        <td>
                            <img src="~/Images/Ellipse 1267.png" />
                        </td>
                        <td class="no-wrap">
                            Chef Emma Watson
                        </td>

                        <td class="no-wrap">
                            chef@gmail.com
                        </td>
                        <td class="no-wrap">
                            +92 43534534534
                        </td>

                        <td class="no-wrap">
                            12 Aug 2023 11:00 am
                        </td>
                        <td>
                            <a id="assign-id" href="#">Company 1</a>
                        </td>

                        <td>
                            <span class="spanGreen" id="active-id"> Active</span>
                            <span class="spanRed d-none" id="block-id"> Block</span>

                        </td>
                        <td class="no-wrap" style="text-align:center;">
                            <div class="dropdown">
                                <div class="horizontal-ellipsis">&#8942;</div>
                                <div class="dropdown-content">
                                    <a href="#" id="btn-assign" value="Assign">Assign Company</a>

                                    <a href="#" id="btn-edit" value="Edit">Edit</a>
                                    <a href="#" id="btn-unblock" value="unblock">Active</a>
                                    <a href="#" id="btn-block" value="block">Block</a>

                                </div>
                            </div>

                        </td>

                    </tr>
                </tbody>
            </table>
        </div>
    </div>

</div>

<div class="modal fade" id="chef-modal" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content" style="border-radius: 30px;">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-overlay-title"><b>Create Chef</b></h5>
                <a class="close cross" data-dismiss="modal" aria-label="Close">
                    &times;
                </a>
            </div>
            <div class="modal-body justify-content-center ">
                <div class="col-md-12 ">
                    <input type="hidden" id="bodyId" name="id" />
                    <input type="hidden" id="chefImage" name="image" />
                    <form class="author-box-center" id="uploadPhoto">
                        <p>
                            <input type="file" accept="image/*" name="imageFile" id="file" onchange="loadFile(event)" class="d-none" />
                        </p>
                        <p class="text-center mb-0">
                            <label for="file" class="cursor-pointer">
                                <span style="border-radius: 50%; margin-left: 108px; position: absolute; width: 30px; height: 30px; margin-top: 105px;">
                                    <img id="iconimage" class="img-responsive thumbnail shadow" src="~/content/dist/img/Group 240736.png" width="28" style="border-radius:60%; background:white; padding: 1px 0px 0px 1px;border: 2px solid #a9b9c9;" onclick="document.getElementById(iconimage)" />
                                </span>
                                <img style="object-fit: cover;padding: 2px;border: 2px solid #a9b9c9;" id="output" src="~/content/dist/img/chef.png" class="rounded-circle shadow-sm" width="140" height="140" />
                                <span id="percent" style="display:none;"></span>
                            </label>
                        </p>

                        <p class="text-center font-weight-bolder" style="font-family:PoppinsFontmedium;">
                            Upload Picture
                        </p>
                    </form>


                </div>
                <br>
                <br>

                <form>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="inputName">Full Name</label>
                            <input type="text" class="form-control" id="fullName" style="height: 50px; border-radius: 7px;" maxlength="30" placeholder="Enter Full name">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="inputEmail">Email</label>
                            <input type="email" class="form-control" id="email" style="height: 50px; border-radius: 7px;" placeholder="Enter  email">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="inputPhoneNumber">Phone Number</label>
                            <input type="tel" class="form-control" id="phoneNumber" style="height: 50px; border-radius: 7px;" placeholder="+92 0000000">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="inputpassword">Password</label>
                            <input type="password" class="form-control" id="password" style="height: 50px; border-radius: 7px;" placeholder="Password">
                        </div>
                    </div>

                    <div class="form-group text-center">
                        <button id="addButton" type="button" width="width : 80%" class="btn btn-theme2 class3 rounded-pill" onclick="addChef()">Save</button>
                        <button id="editButton" type="button" width="width : 80%" class="btn btn-theme2 class3 rounded-pill d-none" onclick="updateChef()">Save</button>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>

@* //Company Modal *@
<div class="modal fade" id="company-detail-modal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" style="border-radius: 30px;">
            <div class="modal-header">
                <b class="modal-title">Organization Details</b>

                <a class="close cross" data-dismiss="modal" aria-label="Close">
                    &times;
                </a>
            </div>

            <div class="modal-body p-4">

                <div class="login-logo" id="companyImage">
                    <img src="~/Images/Group 240606.png" style="padding : 10px;" width="150" alt="WarrenCatering" />

                </div>
                <p class="text-center">
                    <b id="compId" style="font-family: PoppinsFontmedium;">
                        CID1234
                    </b>

                </p>
                <br>
                <br>
                <div class="row">
                    <div class="col-md-6"><span style="font-family: PoppinsFontmedium;">Company Name</span></div>
                    <div class="col-md-6"><span class="text-muted" style="float:right" id="companyname">Company 1</span></div>
                </div>
                <br>
                <div class="row">
                    <div class="col-md-6"><span style="font-family: PoppinsFontmedium;">Unique ID</span></div>
                    <div class="col-md-6"><span class="text-muted" style="float:right" id="companyId"> CID1234</span></div>
                </div>
                <br>
                <div class="row">
                    <div class="col-md-6"><span style="font-family: PoppinsFontmedium;">Email</span></div>
                    <div class="col-md-6"><span class="text-muted" style="float:right" id="companyemail">Company@gmail.com</span></div>
                </div>
                <br>
                <div class="row">
                    <div class="col-md-6"><span style="font-family: PoppinsFontmedium;">Phone Number</span></div>
                    <div class="col-md-6"><span class="text-muted" style="float:right" id="companyPhone">(+92)330-1234321</span></div>

                </div>

                <br>

            </div>
        </div>
    </div>
</div>
@*Select Company Modal*@
<div class="modal fade" id="company-select-modal" role="dialog">
    <div class="modal-dialog modal-sm">
        <!-- Modal content-->
        <div class="modal-content" style="border-radius: 30px;">
            <div class="modal-header">
                <h6 class="modal-title">Assign Company</h6>
                <span class="close cross" id="close">&times;</span>
            </div>
            <input id="chefId" type="hidden" />
            <div class="modal-body">
                <!-- Search Field -->
                <div class="form-group">
                    <input type="text" class="form-control" id="searchInput" placeholder="Search" style="border-radius: 20px;">
                    <img src="~/Images/search-24px.png" style="position: absolute;top: 24px;right: 23px;" />
                </div>

                <!-- List of Companies -->
                <div class="company-list" id="company-list" style="height: 275px; overflow-y:auto">
@*                    <!-- Company 1 -->
                    <div class="company">
                        <div class="company-info">
                            <img src="~/Images/Ellipse 1267.png" alt="company logo">
                            <label for="company-1">Company 1</label>
                        </div>
                        <div class="company-checkbox">
                            <input type="checkbox" value="1" id="company-1" name="company">
                        </div>
                    </div>
                    <hr />
                    <!-- Company 2 -->
                    <div class="company">
                        <div class="company-info">
                            <img src="~/Images/Ellipse 1267.png" alt="company logo">
                            <label for="company-2">Company 2</label>
                        </div>
                        <div class="company-checkbox">
                            <input type="checkbox" value="2" id="company-2" name="company">
                        </div>
                    </div>
                    <hr />*@

                </div>
                <br />
                <div class="form-group text-center">
                    <button type="button" onclick="AssignCompany()" width="width : 80%" style=" width: 228px; height: 43px; border-radius:41px; font-family: Open_SansBold;font-size: 15px; margin-top: 1rem;" class="btn btn-theme2">
                        Save
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(function () {

        var columns = [
            {
                "data": "id",
                "name": "id"
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, type, row, meta) {
                    // Get the current page number
                    var currentPage = $('#table-chefs').DataTable().page.info().page;

                    // Calculate the index based on the page and row
                    var globalIndex = meta.row + currentPage * meta.settings._iDisplayLength + 1;

                    // Format the index with leading zeros (e.g., 001, 002, 003)
                    var formattedIndex = ("000" + globalIndex).slice(-3);

                    // Display the formatted index
                    return formattedIndex;
                }
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, row, payload) {
                    var imageUrl = "";
                    if (CheckNullUndefined(payload.pictureUrl)) {
                        imageUrl = "/content/dist/img/user-dummy.png";
                    }
                    else {
                        imageUrl = payload.pictureUrl;
                    }
                    return '<img class="img-circle" src = "' + imageUrl + '" style="width:35px;height:35px;">';
                }
            },
            {
                "data": "fullName",
                "name": "fullName",
                "render": function (data, row, payload) {
                    return '<span>' + data + '</span>';
                }
            },
            {
                "data": "email",
                "name": "email",
                "render": function (data, row, payload) {
                    return '<span>' + data + '</span>';
                }
            },
            {
                "data": "phoneNumber",
                "name": "phoneNumber",
                "render": function (data, row, payload) {
                    var phone = "";
                    if (CheckNullUndefined(data)) {
                        phone = "N/A";
                    }
                    else {
                        phone = data;
                    }
                    return '<span>' + phone + '</span>';
                }
            },
            {
                "data": "createdAt",
                "name": "createdAt",
                "render": function (data, row, payload) {
                    return '<span>' + data + '</span>';
                }
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, row, payload) {
                    var company = "";
                    if (CheckNullUndefined(payload.companyName)) {
                        company = '<span class="text-muted"> Not Assigned </span>';
                    }
                    else {
                        company = `<a style="color : #010C80;font-weight: 600;" id="company-id" data-companyId='${payload.companyId}' onclick="showCompanyModal('${payload.companyId}')">${payload.companyName}</a>`;
                    }
                    return `${company}`;
                }
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, row, payload) {
                    if (payload.isBlocked == false) {
                            return '<div style="text-align:center;"><span class="bg-success rounded py-1 px-2">Active</span></div>';
                        }
                        else {
                            return '<div style="text-align:center;"><span class="bg-danger rounded py-1 px-2">Blocked</span></div>';
                        }
                }
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, row, payload) {
                    if (payload.isBlocked == false) {
                        return `<div class="no-wrap"style="text-align:center;">
                                                                <div class="dropdown show">
                                                                                  <a class="dropdown actionBtn" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                                    <i class="fas fa-ellipsis-h"></i>
                                                                                  </a>
                                                                                  <div class="dropdown-menu dropopen" aria-labelledby="dropdownMenuLink">
                                                                                        <a class="dropdown-item cursor-pointer" id="assignBtn" data-chefId=${data} value="Assign">Assign Company</a>
                                                                                        <a class="dropdown-item cursor-pointer" id="editBtn" onclick="showChefUpdateModal('${data}')" data-chefId=${data}>Edit</a>
                                                                                        <a class="dropdown-item cursor-pointer" id="deleteBtn" data-chefId=${data} data-status=${1}>Block</a>
                                                                                  </div>
                                                                                </div>
                                                                                </div>`;
                    }
                    else {
                        return `<div class="no-wrap"style="text-align:center;">
                                                                <div class="dropdown show">
                                                                                      <a class="dropdown actionBtn" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                                    <i class="fas fa-ellipsis-h"></i>
                                                                                  </a>
                                                                                  <div class="dropdown-menu dropopen" aria-labelledby="dropdownMenuLink">
                                                                                         <a class="dropdown-item cursor-pointer" id="deleteBtn" data-chefId=${data} data-status=${0}>Active</a>
                                                                                  </div>
                                                                                </div>
                                                                                </div>`;
                    }
                }
            }
        ];

        var order = [[0, "desc"]];
        var columnDefs = [{
            "targets": [0],
            "visible": false,
            "searchable": false
        }];

        //Init General Datatable
        initGeneralDatatable('#table-chefs', '/pagination/getTableData/7', columns, order, columnDefs);
        //initDatatable('#table-item', '/pagination/getTableData/1', '#statusType', '#pageTitleFilter', columns, order, columnDefs);

        //status button click functionality
        $('.buttons .btn-theme3').click(function () {
            let statusId = $(this).attr('data-statusId');
            console.log(statusId);

            $('.btn-theme3').removeClass('selectedButton');
            $(this).addClass('selectedButton');

            //generating table according to status
            initGeneralDatatableByStatus('#table-chefs', '/pagination/getTableData/7', columns, order, columnDefs, statusId);
        });

    });

    //Soft Delete Feature
    $('#table-chefs tbody').on('click', '[id*=deleteBtn]', function () {
        //Get Row Data
        var data = table.row($(this).parents('tr')).data();

        var chefId = $(this).attr("data-chefId");
        var status = parseInt($(this).attr("data-status"));

        var title, confirmButtonText;

        if (status == 1) {
            title = 'Are you sure, you want to block this chef?';
            confirmButtonText = 'Yes, Block it!';
        }
        else {
            title = 'Are you sure, you want to unblock this chef?';
            confirmButtonText = 'Yes, Unblock it!';
        }

        swal.fire({
            title: title,
            icon: 'warning',
            allowOutsideClick: false,
            showCloseButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            showCancelButton: true,
            confirmButtonText: confirmButtonText
        }).then((result) => {
            if (result.isConfirmed) {
                if (status == 1) {
                    loadHttpRequest("POST", "/Management/softDeleteChef?id=" + chefId + "&isStatus=" + status, softDeleteCallback);
                }
                else {
                    loadHttpRequest("POST", "/Management/softDeleteChef?id=" + chefId + "&isStatus=" + status, softDeleteCallback);
                }
            }
            else if (result.dismiss === Swal.DismissReason.cancel) {
                // Code to execute if "Cancel" is clicked
            }
        });
    });

    function softDeleteCallback(response) {
        Swal.fire({
            title: 'Successful',
            text: 'Status updated successfully.',
            icon: 'success',
            //imageUrl: '/content/dist/img/SwalSuccess.png',
            //imageAlt: 'Success Icon',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            table.draw();
        })
    }

    //load file effect
    function loadFile(event) {
        var output = document.getElementById('output');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src) // free memory
        }
    };

    //$('input:checkbox[name=company]').on('change', function () {
    //    if ($(this).prop('checked')) {
    //        // Checkbox is checked, uncheck other checkboxes in the same group
    //        $('input:checkbox[name=company]').not(this).prop('checked', false);
    //    }
    //});
    $(document).on('change', 'input:checkbox[name=company]', function () {
        if ($(this).prop('checked')) {
            // Checkbox is checked, uncheck other checkboxes in the same group
            $('input:checkbox[name=company]').not(this).prop('checked', false);
        }
    });

    //show Company Feature
    function showCompanyModal(companyId) {
        $("#appendRow").html("");
        $("#companyImage").html("");

        $.ajax({
            type: 'GET',
            url: '/Management/GetCompanyDetail?companyId=' + companyId,
            async: true,
            processData: false,
            contentType: false,
            success: function (res) {
                var imageUrl = "";
                var phone = "";
                var email = "";
                var name = "";
                if (CheckNullUndefined(res.companyImage)) {
                    imageUrl = "/assets/Images/companyLogoDefault.png";
                }
                else {
                    imageUrl = res.companyImage;
                }

                if (CheckNullUndefined(res.companyPhoneNumber)) {
                    phone = "N/A";
                }
                else {
                    phone = res.companyPhoneNumber;
                }

                if (CheckNullUndefined(res.companyEmail)) {
                    email = "N/A";
                }
                else {
                    email = res.companyEmail;
                }

                if (CheckNullUndefined(res.companyName)) {
                    name = "N/A";
                }
                else {
                    name = res.companyName;
                }

                $("#companyImage").append(`<img src="${imageUrl}" style = "padding : 10px;" width = "150" alt = "WarrenCatering" />`);
                $("#companyname").text(name);
                $('#compId').text(res.companyId);
                $("#companyId").text(res.companyId);
                $("#companyemail").text(email);
                $("#companyPhone").text(phone);
            },
            error: function (error) {
                return error;
            },
        });

        //show modal
        $("#company-detail-modal").modal("toggle");
    }

    //Select Company Feature
    $('#table-chefs tbody').on('click', '[id*=assignBtn]', function () {
        //Get Row Data
        var data = table.row($(this).parents('tr')).data();

        var chefId = $(this).attr("data-chefId");
        $("#chefId").val(chefId);
        $.ajax({
            type: 'GET',
            url: '/Management/GetCompaniesForChef',
            async: true,
            processData: false,
            contentType: false,
            success: function (res) {
                console.log(res);

                $('#company-list').empty();
                $("#company-list").append(`                                <div class="company text-center">
                                        <span id="notFoundMessageCompany" class="text-danger poppin-m lableFont text-center" style="display: none;">No Company Found!</span>

                                    </div>`);
                                    if(res != null && res.length > 0){
                    for (let company of res) {

                        $('#company-list').append(
                            `<div class="dropdownitem">
                            <div class="company">
                                    <div class="company-info">
                                        <img class="rounded-circle" src="${company.imageUrl}" alt="company logo" width="23px" height="23px">
                                            <label for="company-${company.id}"title="${company.name}">${company.name.length > 15 ? `${company.name.slice(0, 15)}...` : company.name}</label>
                                    </div>
                                    <div class="company-checkbox">
                                         <input type="checkbox" class="checkbox" value="${company.id}" id="company-${company.id}" name="company">
                                    </div>
                                </div>
                                <hr /></div>`
                        );
                    }
                                    }
                                    else{
                    $("#company-list").append(`<div class="company text-center">
                                            <span id="notFoundMessageCompany" class="text-danger poppin-m lableFont text-center" style="display: none;">No Company Found!</span>

                                        </div>`);
                                    }

            },
            error: function (error) {
                return error;
            },
        });

        $('#company-select-modal').modal('show');
    });

    $('#close').click(function () {
        $('#company-select-modal').modal('hide');
    });

    var company = ""; 

    //function AddCompany(){
    //}

    function AssignCompany(){
        $('input:checkbox[name=company]:checked').each(function () {
            company = $(this).val();
        });
        var companyId = company;
        var chefId = $("#chefId").val();
        loadHttpRequest("POST", "/Management/assignCompany?id=" + chefId + "&companyId=" + companyId, assignCompanyHandler);
    }

    function assignCompanyHandler(response) {
        Swal.fire({
            title: 'Successful',
            text: 'Company Get Assign Successfully.',
            icon: 'success',
            //imageUrl: '/content/dist/img/SwalSuccess.png',
            //imageAlt: 'Success Icon',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            table.draw();
            $('#company-select-modal').modal('hide');
        })
    }

    $('#searchInput').on('input', function () {
        var searchText = $(this).val().toLowerCase();

        $('.company').each(function () {
            var companyLabel = $(this).find('label').text().toLowerCase();

            if (companyLabel.includes(searchText)) {
                $(this).prependTo('.company-list');
            }
        });
    });

    //$('#searchInput').on('input', function () {
    //    var inputText = $(this).val().toLowerCase();

    //    // Check for the Company accordion
    //    var $companyItems = $('.company-list:eq(0) .dropdownitem');
    //    var $notFoundMessageCompany = $('#notFoundMessageCompany');

    //    // Check for the Chef accordion
    //    var $chefItems = $('.company-list:eq(1) .dropdownitem');
    //    var $notFoundMessageChef = $('#notFoundMessageChef');

    //    // Function to handle visibility and "Not Found" message
    //    function handleAccordionItems($items, $notFoundMessage) {
    //        var hasMatches = false;
    //        $items.each(function () {
    //            var label = $(this).text().toLowerCase();
    //            if (label.includes(inputText)) {
    //                $(this).show();
    //                hasMatches = true;
    //            } else {
    //                $(this).hide();
    //            }
    //        });
    //        if (!hasMatches) {
    //            $notFoundMessage.show();
    //        } else {
    //            $notFoundMessage.hide();
    //        }
    //    }

    //    // Call the function for each accordion
    //    handleAccordionItems($companyItems, $notFoundMessageCompany);
    //    handleAccordionItems($chefItems, $notFoundMessageChef);
    //});

    //Update Feature
    function showChefUpdateModal(chefId) {
        //var categoryId = $(this).attr("data-categoryId");
        $("#bodyId").val(chefId);
        //alert($("#bodyId").val());
        $.ajax({
            type: 'GET',
            url: '/Management/GetChefDetail?chefId=' + chefId,
            async: true,
            processData: false,
            contentType: false,
            success: function (res) {
                $("#fullName").val(res.fullName);
                $("#email").val(res.email);
                $("#phoneNumber").val(res.phoneNumber);
                $("#output").attr("src", res.pictureUrl);
                $("#chefImage").val(res.pictureUrl);
            },
            error: function (error) {
                return error;
            },
        });
        const inputField = document.getElementById("email");
        inputField.disabled = true; // Disable the input field
        //change modal title
        $("#modal-overlay-title").html("<b>Edit Chef</b>");
        //show button
        $("#addButton").addClass("d-none");
        $("#editButton").removeClass("d-none");

        //show modal
        $("#chef-modal").modal("toggle");
    }

    function addChef() {
        var executeHttpRequest = true;
        var name = $("#fullName").val();
        var icon = $("#file")[0].files[0];
        var file = $("#file").val();
        var email = $("#email").val();
        var phone = $("#phoneNumber").val();
        var password = $("#password").val();

        var formData = new FormData();

        if (CheckNullUndefined(name)) {
            Toast.fire({ icon: 'warning', title: 'Name is Required' });
            executeHttpRequest = false;
        }
        if (CheckNullUndefined(icon)) {
            Toast.fire({ icon: 'warning', title: 'Please add Profile Image' });
            executeHttpRequest = false;
        }
        if (CheckNullUndefined(email)) {
            Toast.fire({ icon: 'warning', title: 'Email is Required' });
            executeHttpRequest = false;
        }
        if (CheckNullUndefined(phone)) {
            Toast.fire({ icon: 'warning', title: 'Phone Number is Required' });
            executeHttpRequest = false;
        }
        if (CheckNullUndefined(password)) {
            Toast.fire({ icon: 'warning', title: 'Password is Required' });
            executeHttpRequest = false;
        }

        //regex
        let phoneRegex = /[A-Za-z]/;
        var emailExp = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        var letters = /^[A-Za-z]+$/;

        //checks fields
        if (!email.match(emailExp)) {
            Toast.fire({ icon: 'warning', title: 'Email format is incorrect' });
            executeHttpRequest = false;
        }
        if (phone.match(phoneRegex)) {
            Toast.fire({ icon: 'warning', title: 'Phone number is not valid' });
            executeHttpRequest = false;
        }
        if (!name.match(letters)) {
            Toast.fire({ icon: 'warning', title: 'Name should be in Alphabet characters' });
            executeHttpRequest = false;
        }

        var lowerCaseLetters = /[a-z]/g;
        var upperCaseLetters = /[A-Z]/g;
        var numbers = /[0-9]/g;
        var nonAlphaNumaric = /[^a-zA-Z0-9]/g;
        if (password.length <= 5) {
            Toastr.error('Password must be atleast 6 charactors long');
            executeHttpRequest = false;
        }
        else if (!password.match(lowerCaseLetters)) {
            Toastr.error('Password must contail atleast 1 lowercase letter');
            executeHttpRequest = false;
        }
        else if (!password.match(upperCaseLetters)) {
            Toastr.error('Password must contain atleast 1 upper letter');
            executeHttpRequest = false;
        }
        else if (!password.match(numbers)) {
            Toastr.error('Password must contain atleast 1 number');
            executeHttpRequest = false;
        }
        else if (!password.match(nonAlphaNumaric)) {
            Toastr.error('Password must contain atleast 1 non alphanumaric charactor');
            executeHttpRequest = false;
        }

        if (executeHttpRequest == true) {
            formData.append("file", icon);
            $.ajax({
                type: "POST",
                url: "/Management/FileUpload",
                dataType: "json",
                contentType: false,
                processData: false,
                data: formData,
                success: function (res) {
                    var data = {};
                    data.pictureUrl = res;
                    data.fullName = name;
                    data.email = email;
                    data.phoneNumber = phone;
                    data.password = password;
                    console.log(data);
                    loadHttpRequest("POST", "/Management/ChefCreate", createChefHandler, JSON.stringify(data));
                },
                error: function (error) {
                    toastr.error("Error", error.message);
                    return error;
                },
            });

        }
    }

    function createChefHandler(evt) {
        Swal.fire({
            title: 'Chef Created Successfully',
            icon: 'success',
            //imageUrl: '/Images/Group 227317.png',
            //imageAlt: 'Custom image',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            table.draw();
            $('#chef-modal').modal('hide');
        })
    }

    function updateChef() {
        var executeHttpRequest = true;
        var Id = $("#bodyId").val();
        var name = $("#fullName").val();
        var icon = $("#file")[0].files[0];
        var file = $("#file").val();
        var email = $("#email").val();
        var phone = $("#phoneNumber").val();
        var password = $("#password").val();
        var formData = new FormData();

        var formData = new FormData();

        if (CheckNullUndefined(name)) {
            Toast.fire({ icon: 'warning', title: 'Name is Required' });
            executeHttpRequest = false;
        }
        if (CheckNullUndefined(email)) {
            Toast.fire({ icon: 'warning', title: 'Email is Required' });
            executeHttpRequest = false;
        }
        if (CheckNullUndefined(phone)) {
            Toast.fire({ icon: 'warning', title: 'Phone Number is Required' });
            executeHttpRequest = false;
        }

        //regex
        let phoneRegex = /[A-Za-z]/;
        var emailExp = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        var letters = /^[A-Za-z]+$/;

        //checks fields
        if (!email.match(emailExp)) {
            Toast.fire({ icon: 'warning', title: 'Email format is incorrect' });
            executeHttpRequest = false;
        }
        if (phone.match(phoneRegex)) {
            Toast.fire({ icon: 'warning', title: 'Phone number is not valid' });
            executeHttpRequest = false;
        }
        if (!name.match(letters)) {
            Toast.fire({ icon: 'warning', title: 'Name should be in Alphabet characters' });
            executeHttpRequest = false;
        }

        if (file == "") {
            var image = $("#chefImage").val();
            if(password == ""){
                if (executeHttpRequest == true) {
                    var data = {};
                    data.id = Id;
                    data.pictureUrl = image;
                    data.fullName = name;
                    data.email = email;
                    data.phoneNumber = phone;
                    data.password = null;
                    console.log(data);
                    loadHttpRequest("POST", "/Management/ChefUpdate", updateChefHandler, JSON.stringify(data));
                }
            }
            else {
                var lowerCaseLetters = /[a-z]/g;
                var upperCaseLetters = /[A-Z]/g;
                var numbers = /[0-9]/g;
                var nonAlphaNumaric = /[^a-zA-Z0-9]/g;
                if (password.length <= 5) {
                    Toastr.error('Password must be atleast 6 charactors long');
                    executeHttpRequest = false;
                }
                else if (!password.match(lowerCaseLetters)) {
                    Toastr.error('Password must contail atleast 1 lowercase letter');
                    executeHttpRequest = false;
                }
                else if (!password.match(upperCaseLetters)) {
                    Toastr.error('Password must contain atleast 1 upper letter');
                    executeHttpRequest = false;
                }
                else if (!password.match(numbers)) {
                    Toastr.error('Password must contain atleast 1 number');
                    executeHttpRequest = false;
                }
                else if (!password.match(nonAlphaNumaric)) {
                    Toastr.error('Password must contain atleast 1 non alphanumaric charactor');
                    executeHttpRequest = false;
                }
                if (executeHttpRequest == true) {
                    var data = {};
                    data.id = Id;
                    data.pictureUrl = image;
                    data.fullName = name;
                    data.email = email;
                    data.phoneNumber = phone;
                    data.password = password;
                    console.log(data);
                    loadHttpRequest("POST", "/Management/ChefUpdate", updateChefHandler, JSON.stringify(data));
                }
            }
        }
        else {
            if(password == ""){
                if (executeHttpRequest == true) {
                    formData.append("file", icon);
                    $.ajax({
                        type: "POST",
                        url: "/Management/FileUpload",
                        dataType: "json",
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (res) {
                            var data = {};
                            data.id = Id;
                            data.pictureUrl = res;
                            data.fullName = name;
                            data.email = email;
                            data.phoneNumber = phone;
                            data.password = null;
                            console.log(data);
                            loadHttpRequest("POST", "/Management/ChefUpdate", updateChefHandler, JSON.stringify(data));
                        },
                        error: function (error) {
                            toastr.error("Error", error.message);
                            return error;
                        },
                    });

                }
            }
            else {
                var lowerCaseLetters = /[a-z]/g;
                var upperCaseLetters = /[A-Z]/g;
                var numbers = /[0-9]/g;
                var nonAlphaNumaric = /[^a-zA-Z0-9]/g;
                if (password.length <= 5) {
                    Toastr.error('Password must be atleast 6 charactors long');
                    executeHttpRequest = false;
                }
                else if (!password.match(lowerCaseLetters)) {
                    Toastr.error('Password must contail atleast 1 lowercase letter');
                    executeHttpRequest = false;
                }
                else if (!password.match(upperCaseLetters)) {
                    Toastr.error('Password must contain atleast 1 upper letter');
                    executeHttpRequest = false;
                }
                else if (!password.match(numbers)) {
                    Toastr.error('Password must contain atleast 1 number');
                    executeHttpRequest = false;
                }
                else if (!password.match(nonAlphaNumaric)) {
                    Toastr.error('Password must contain atleast 1 non alphanumaric charactor');
                    executeHttpRequest = false;
                }

                if (executeHttpRequest == true) {
                    formData.append("file", icon);
                    $.ajax({
                        type: "POST",
                        url: "/Management/FileUpload",
                        dataType: "json",
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (res) {
                            var data = {};
                            data.id = Id;
                            data.pictureUrl = res;
                            data.fullName = name;
                            data.email = email;
                            data.phoneNumber = phone;
                            data.password = password;
                            console.log(data);
                            loadHttpRequest("POST", "/Management/ChefUpdate", updateChefHandler, JSON.stringify(data));
                        },
                        error: function (error) {
                            toastr.error("Error", error.message);
                            return error;
                        },
                    });

                }
            }
        }
    }

    function updateChefHandler(evt) {
        Swal.fire({
            title: 'Chef Updated Successfully',
            icon: 'success',
            //imageUrl: '/Images/Group 227317.png',
            //imageAlt: 'Custom image',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            table.draw();
            $('#chef-modal').modal('hide');
        })
    }

    // script.js 
    $(document).ready(function () {

        $('#btn-chef').click(function () {
            $("#fullName").val('');
            $("#email").val('');
            $("#phoneNumber").val('');
            $("#output").attr("src", "");
            $("#file").val('');
            $("#chefImage").val('');
            $("#password").val('');
            $("#email").removeAttr("disabled");
            $('#output').attr("src", "/content/dist/img/chef.png");
            const inputField = document.getElementById("email");
            inputField.disabled = false; // Disable the input field

            //change modal title
            $("#modal-overlay-title").html("<b>Create Chef</b>");
            //show button
            $("#addButton").removeClass("d-none");
            $("#editButton").addClass("d-none");

            $('#chef-modal').modal('show');
        });
        // for changing Image of chef
        if ($('#chef-white').hasClass('d-none')) {
            $('#chef-white').removeClass('d-none');
            $('#chef').addClass('d-none');
        }
        else {
            $('#chef-white').addClass('d-none');
            $('#chef').removeClass('d-none');
        }
        $("#nav-chef").addClass("active");

        //$('.checkbox').change(function () {
        //    if ($(this).is(":checked")) {
        //        $('.checkbox').not(this).prop('checked', false);
        //    }
        //});
        $('#assign-id').click(function () {
            $('#org-id').modal('show');
        });
        //$('#close').click(function () {
        //    $('#comp-id').modal('hide');
        //});
        $('#close-id1').click(function () {
            $('#id-comp1').modal('hide');
        });
        $('#id-close3').click(function () {
            $('#org-id').modal('hide');
        });
        //$('#create-btn').click(function () {
        //    $('#btn-create').modal('show');
        //});
        $('#d-table3').DataTable();

        $(".horizontal-ellipsis").click(function () {
            $(".dropdown-content").toggle();
        });

        $(document).click(function (event) {
            if (!$(event.target).closest(".dropdown").length) {
                $(".dropdown-content").hide();
            }
        });
    });

            //document.getElementById('btn-delete').addEventListener('click', function () {
            //    const swalWithBootstrapButtons = Swal.mixin({
            //        customClass: {
            //            confirmButton: 'btn btn-success',
            //            cancelButton: 'btn btn-danger'
            //        },
            //        buttonsStyling: false
            //    });

            //    swalWithBootstrapButtons.fire({
            //        title: 'Delete Confirmation',
            //        text: "Are you sure you want to delete this item?",
            //        icon: 'warning',
            //        showCancelButton: true,
            //        confirmButtonText: 'Yes, delete it!',
            //        cancelButtonText: 'Cancel',
            //        confirmButtonColor: '#d33' // Custom confirm button color
            //    }).then((result) => {
            //        if (result.isConfirmed) {
            //            // Handle delete action here
            //            // For example: make an AJAX request to delete the item
            //            console.log('Delete action confirmed');
            //        }
            //    });
            //});

            //$('#btn-block').click(function () {
            //    Swal.fire({
            //        title: 'Block!',
            //        text: 'Are you sure you want to block the user?',
            //        icon: 'warning',
            //        confirmButtonText: 'OK',
            //        showCancelButton: true,
            //        cancelButtonText: 'Cancel'
            //    }).then((result) => {
            //        if (result.isConfirmed) {
            //            // Code to execute if "OK" is clicked

            //            $('#block-id').removeClass('d-none');

            //            $('#active-id').addClass('d-none');
            //            //console.log('OK button clicked');

            //        } else if (result.dismiss === Swal.DismissReason.cancel) {
            //            // Code to execute if "Cancel" is clicked

            //        }
            //    });


            //});

            //$('#btn-unblock').click(function () {
            //    Swal.fire({
            //        title: 'Active!',
            //        text: 'Are you sure you want to unblock the user?',
            //        icon: 'success',
            //        confirmButtonText: 'OK',
            //        showCancelButton: true,
            //        cancelButtonText: 'Cancel'
            //    }).then((result) => {
            //        if (result.isConfirmed) {
            //            // Code to execute if "OK" is clicked


            //            $('#active-id').removeClass('d-none');
            //            $('#block-id').addClass('d-none');
            //            console.log('OK button clicked');
            //        } else if (result.dismiss === Swal.DismissReason.cancel) {

            //        }
            //    });

            //    //if ($('#ban-icon').hasClass('d-none')){
            //    //    $('#active-icon').removeClass('d-none');
            //    //    $('#block-span').removeClass('d-none');
            //    //}
            //    //else{
            //    //    $('#ban-icon').removeClass('d-none');
            //    //    $('#active-span').removeClass('d-none');
            //    //}

            //});



</script>
