<style>
    .mealInput {
        height: 41px;
        border-radius: 7px;
    }
    .btnAddMeal{
       border-radius: 10px;
       padding: 9px 25px;
    }
</style>

<div class="container-fluid">
    <h3>
        <span class="vertical-line mr-2"></span>
        Meals
    </h3>
    <div class="card mt-3" style="border-radius: 15px;">
        <div class="card-body">
            <div class="row">
                <div class="buttons col-sm-6 col-md-6">
                    <button class="btn btn-theme3 mt-1 btnstyle classcss selectedButton" id="btn-1" data-statusId="0">All</button>
                    <button class="btn btn-theme3 mt-1 btnstyle classcss" id="btn-2" data-statusId="1">Active</button>
                    <button class="btn btn-theme3 mt-1 btnstyle classcss" id="btn-3" data-statusId="2">Block</button>
                </div>
                <div class="col-sm-6 col-md-6">
                    <button type="button" class="btn btn-theme2 btnmanager rounded-pill" style="background-color : #010C80" id="btn-meal"> + Add Meals </button>

                </div>
            </div>
        </div>
        <div class="table-responsive" style="padding:0px 25px 25px 25px;">

            <table class="table table-bordered w-100 no-wrap" id="table-meal">
                <thead>
                    <tr class="table-active">
                        <td>
                            Id
                        </td>
                        <th>
                            Sr #
                        </th>
                        <th>
                            Picture
                        </th>
                        <th>
                            Meal Name
                        </th>
                        <th>
                            Meal Timings
                        </th>
                        <th>
                            Date
                        </th>
                        <th>
                            Status
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>

                </thead>
                <tbody>
                    <tr>
                        <td>
                            001
                        </td>
                        <td>
                            <img src="~/Images/lunch.png" />
                        </td>

                        <td class="no-wrap">
                            Breakfast
                        </td>
                        <td class="no-wrap">
                            8:00am - 12:00pm
                        </td>
                        <td class="no-wrap">
                            12 Aug 2023 11:00 am
                        </td>
                        <td>
                            <span class="spanGreen" id="active-id"> Active</span>
                            <span class="spanRed d-none" id="block-id"> Block</span>

                        </td>
                        <td class="no-wrap" style="text-align:center;">
                            <div class="dropdown">
                                <div class="horizontal-ellipsis">&#8942;</div>
                                <div class="dropdown-content">

                                    <a href="#" id="btn-edit" value="Edit">Edit</a>
                                    <a href="#" id="btn-unblock" value="unblock">Active</a>
                                    <a href="#" id="btn-block" value="block">Block</a>

                                </div>
                            </div>

                        </td>

                    </tr>
                </tbody>
            </table>
        </div>
    </div>

</div>

<div class="modal fade" id="meal-modal" role="dialog">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <!-- Modal content-->
        <div class="modal-content" style="border-radius: 30px;">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-overlay-title"><b>Add Meal</b></h5>
                <a class="close cross" data-dismiss="modal" aria-label="Close">
                    &times;
                </a>
            </div>
            <div class="modal-body justify-content-center ">
                <input type="hidden" id="bodyId" name="id" />
                <input type="hidden" id="mealImage" name="image" />
                <div class="col-md-12 ">
                    <form class="author-box-center" id="uploadPhoto">
                        <p>
                            <input type="file" accept="image/*" name="imageFile" id="file" onchange="loadFile(event)" class="d-none" />
                        </p>
                        <p class="text-center mb-0">
                            <label for="file" class="cursor-pointer">
                                <span style="border-radius: 50%; margin-left: 108px; position: absolute; width: 30px; height: 30px; margin-top: 105px;">
                                    <img id="iconimage" class="img-responsive thumbnail shadow" src="~/content/dist/img/camerapic.png" width="28" style="border-radius:60%;padding: 1px 0px 0px 1px;border: 2px solid #a9b9c9;" onclick="document.getElementById(iconimage)" />
                                </span>
                                <img style="object-fit: cover;padding: 2px;border: 2px solid #a9b9c9;" id="output" src="~/content/dist/img/Group 240735.png" class="rounded-circle shadow-sm" width="140" height="140" />
                                <span id="percent" style="display:none;"></span>
                            </label>
                        </p>

                        <p class="text-center font-weight-bolder" style="font-family:PoppinsFontmedium;">
                            Upload Picture
                        </p>
                    </form>
                    <div class="row">
                        <div class="col-md-6">
                            <label for="mealName">Meal Name</label>
                            <input type="text" class="form-control" id="mealName" maxlength="30" style="height: 50px; border-radius: 7px;" placeholder="Enter Meal name">
                        </div>
                        <div class="col-md-6">
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="startTime">Start Time</label>
                                    <input type="time" class="form-control" id="startTime" style="height: 50px; border-radius: 7px;" placeholder="9:00am">
                                </div>
                                <div class="col-md-6">
                                    <label for="endTime">End Time</label>
                                    <input type="time" class="form-control" id="endTime" style="height: 50px; border-radius: 7px;" placeholder="9:00am">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-12 col-md-12 mt-3">
                        <h3>Category</h3>
                    </div>
                    <div class="row">
                        <div class="col-md-3 col-lg-1">
                            <form class="author-box-center" id="uploadCatPhoto">
                                <p>
                                    <input type="file" accept="image/*" name="imageCatFile" id="catfile" onchange="loadCatFile(event)" class="d-none" />
                                </p>
                                <p class="mb-0">
                                    <label for="catfile" class="cursor-pointer">
                                        <span style="border-radius: 50%; margin-left: 32px; position: absolute; width: 30px; height: 30px; margin-top: 28px;">
                                            <img id="iconimage" class="img-responsive thumbnail shadow" src="/content/dist/img/camerapic.png" width="20" style="border-radius:60%;padding: 1px 0px 0px 1px;border: 2px solid #a9b9c9;" onclick="document.getElementById(iconimage)" />
                                        </span>
                                        <img style="object-fit: cover;padding: 2px;border: 2px solid #a9b9c9;" id="outputimage" src="/content/dist/img/categoryimage.png" class="rounded-circle shadow-sm" width="50" height="50" />
                                        <span id="percent" style="display:none;"></span>
                                    </label>
                                </p>
                            </form>
                        </div>
                        <div class="col-md-5 col-lg-4 mt-3">
                            <input type="text" class="form-control" maxlength="30" id="catName" placeholder="Enter category name" style="height:50px;">

                        </div>
                        <div class="col-md-4 col-lg-3 mt-3">
                            <button type="button" class="btn btn-theme2 btnAddMeal" id="add-category"> + Add  </button>
                        </div>

                    </div>

                </div>
                <div id="appendRow" class="row px-2 mt-4">
@*                    <div class="col-md-6">
                        <input type="text" class="form-control" id="inputcatName" style="height: 50px; border-radius: 7px; padding-left : 30px;" placeholder="Breakfast Choice">
                        <span class="close cursor" id="close-id8">&times;</span>
                        <img class="cursor1" src="~/Images/Group 240643.png" style="padding-left: 2px;padding-top: 2px;" />

                    </div>
                    <div class="col-md-6">
                        <input type="text" class="form-control" id="inputcatName" style="height: 50px; border-radius: 7px; padding-left : 27px;" placeholder="Breakfast Side">
                        <span class="close cursor" id="close-id9">&times;</span>
                        <img class="cursor1" src="~/Images/Path 281647.png" style="padding-left: 6px;padding-top: 1px;" />

                    </div>*@

                </div>
                <div class="form-group text-center">
                    <button id="addButton" type="button" width="width : 80%" class="btn btn-theme2 class3 rounded-pill" onclick="addMeal()">Save</button>
                    <button id="editButton" type="button" width="width : 80%" class="btn btn-theme2 class3 rounded-pill d-none" onclick="updateMeal()">Save</button>
                </div>

            </div>
        </div>
    </div>
</div>

<script>

    $(function () {

        var columns = [
            {
                "data": "id",
                "name": "id"
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, type, row, meta) {
                    // Get the current page number
                    var currentPage = $('#table-meal').DataTable().page.info().page;

                    // Calculate the index based on the page and row
                    var globalIndex = meta.row + currentPage * meta.settings._iDisplayLength + 1;

                    // Format the index with leading zeros (e.g., 001, 002, 003)
                    var formattedIndex = ("000" + globalIndex).slice(-3);

                    // Display the formatted index
                    return formattedIndex;
                }
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, row, payload) {
                    var imageUrl = "";
                    if (CheckNullUndefined(payload.picture)) {
                        imageUrl = "/content/dist/img/no-image-available.png";
                    }
                    else {
                        imageUrl = data;
                    }
                    return '<img class="img-circle" src = "' + imageUrl + '" style="width:35px;height:35px;">';
                }
            },
            {
                "data": "name",
                "name": "name",
                "render": function (data, row, payload) {
                    return '<span>' + data + '</span>';
                }
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, row, payload) {
                    return '<span>' + payload.timmings + '</span>';
                }
            },
            {
                "data": "createdAt",
                "name": "createdAt",
                "render": function (data, row, payload) {
                    return '<span>' + data + '</span>';
                }
            },
            {
                "data": "isDeleted",
                "name": "isDeleted",
                "render": function (data, row, payload) {
                    if (data == false) {
                        return '<div style="text-align:center;"><span class="bg-success rounded py-1 px-2">Active</span></div>';
                    }
                    else {
                        return '<div style="text-align:center;"><span class="bg-danger rounded py-1 px-2">Block&nbsp;</span></div>';
                    }
                }
            },
            {
                "data": "id",
                "name": "id",
                "render": function (data, row, payload) {
                    if (payload.isDeleted == false) {
                        return `<div class="no-wrap"style="text-align:center;">
                            <div class="dropdown show">
                                                  <a class="dropdown actionBtn" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <i class="fas fa-ellipsis-h"></i>
                                              </a>
                                              <div class="dropdown-menu dropopen" aria-labelledby="dropdownMenuLink">
                                                    <a class="dropdown-item cursor-pointer" id="editBtn" onclick="showUpdateModal(${data})" data-mealId=${data}>Edit</a>
                                                    <a class="dropdown-item cursor-pointer" id="deleteBtn" data-mealId=${data} data-status=${0}>Block</a>
                                              </div>
                                            </div>
                                            </div>`;
                    }
                    else {
                        return `<div class="no-wrap"style="text-align:center;">
                            <div class="dropdown show">
                                                  <a class="dropdown actionBtn" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <i class="fas fa-ellipsis-h"></i>
                                              </a>
                                              <div class="dropdown-menu dropopen" aria-labelledby="dropdownMenuLink">
                                                    <a class="dropdown-item cursor-pointer" id="deleteBtn" data-mealId=${data} data-status=${1}>Active</a>
                                              </div>
                                            </div>
                                            </div>`;
                    }
                }
            }
        ];

        var order = [[0, "desc"]];
        var columnDefs = [{
            "targets": [0],
            "visible": false,
            "searchable": false
        }];

        //Init General Datatable
        initGeneralDatatable('#table-meal', '/pagination/getTableData/2', columns, order, columnDefs);
        //initDatatable('#table-item', '/pagination/getTableData/1', '#statusType', '#pageTitleFilter', columns, order, columnDefs);

        //status button click functionality
        $('.buttons .btn-theme3').click(function () {
            let statusId = $(this).attr('data-statusId');
            console.log(statusId);

            $('.btn-theme3').removeClass('selectedButton');
            $(this).addClass('selectedButton');

            //generating table according to branch
            initGeneralDatatableByStatus('#table-meal', '/pagination/getTableData/2', columns, order, columnDefs, statusId);
        });
    });

    //Soft Delete Feature
    $('#table-meal tbody').on('click', '[id*=deleteBtn]', function () {
        //Get Row Data
        var data = table.row($(this).parents('tr')).data();

        var mealId = $(this).attr("data-mealId");
        var status = parseInt($(this).attr("data-status"));

        var title, confirmButtonText;

        if (status == 1) {
            title = 'Are you sure, you want to unblock this meal?';
            confirmButtonText = 'Yes, Unblock it!';
        }
        else {
            title = 'Are you sure, you want to block this meal?';
            confirmButtonText = 'Yes, Block it!';
        }

        swal.fire({
            title: title,
            icon: 'warning',
            allowOutsideClick: false,
            showCloseButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            showCancelButton: true,
            confirmButtonText: confirmButtonText
        }).then((result) => {
            if (result.isConfirmed) {
                loadHttpRequest("POST", "/Management/SoftMealDelete?id=" + mealId + "&isDeleted=" + status, softDeleteCallback);
            }
            else if (result.dismiss === Swal.DismissReason.cancel) {
                // Code to execute if "Cancel" is clicked
            }
        });
    });

    function softDeleteCallback(response) {
        Swal.fire({
            title: 'Successful',
            text: 'Status updated successfully.',
            icon: 'success',
            //imageUrl: '/content/dist/img/SwalSuccess.png',
            //imageAlt: 'Success Icon',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            table.draw();
        })
    }

    / script.js /
    $(document).ready(function () {
        // for changing image of meal
        $('#tray-white, #tray').toggleClass('d-none');
        $("#nav-tray").addClass("active");
        $('#close-id6').click(function () {
            $('#item-id').modal('hide');
        });
        $('#d-table3').DataTable();

        $(".horizontal-ellipsis").click(function () {
            $(".dropdown-content").toggle();
        });

        $(document).click(function (event) {
            if (!$(event.target).closest(".dropdown").length) {
                $(".dropdown-content").hide();
            }
        });
    });

        //load file effect
    function loadFile(event) {
        var output = document.getElementById('output');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src) // free memory
        }
    };

    //load file effect
    function loadCatFile(event) {
        var output = document.getElementById('outputimage');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src) // free memory
        }
    };

    var categoryList = [];

    $('#btn-meal').click(function () {
        categoryList = [];
        $("#bodyId").val('');
        $("#mealName").val('');
        $("#startTime").val('');
        $("#endTime").val('');
        $("#catfile").val('');
        $("#file").val('');
        $("#catName").val('');
        $("#appendRow").html("");
        $("#output").attr("src", "/content/dist/img/Group 240735.png");
        $("#outputimage").attr("src", "/content/dist/img/categoryimage.png");

        $("#modal-overlay-title").text("Add Meals");
        $("#editButton").addClass("d-none");
        $("#addButton").removeClass("d-none");

        $('#meal-modal').modal('show');
    });

    $("#add-category").on("click", function () {
        var executeHttpRequest = true;
        // Get values from the input fields
        var imageName = $("#outputimage").attr("src");
        var icon = $("#catfile")[0].files[0];
        var file = $("#catfile").val();
        var categoryName = $("#catName").val();

        if (CheckNullUndefined(categoryName)) {
            Toast.fire({ icon: 'warning', title: 'Category Name is Required' });
            executeHttpRequest = false;
        }

        if (executeHttpRequest == true) {
            if (file == "") {
                imageName = "http://chefpanel.assortcloud.com/ChefImages/3027ec9e-e22a-439b-9b89-0c531e8a7711.png";
                var category = {
                    "catImage": imageName,
                    "catName": categoryName,
                }

                categoryList.push(category);

                $("#appendRow").html("");

                for (var i = 0; i < categoryList.length > 0; i++) {
                    var image = categoryList[i].catImage;
                    var name = categoryList[i].catName;
                    // Append a new row with the values to the appendingRow div
                    $("#appendRow").append(`<div id="cat${i}" class="appended-row col-md-12 col-lg-6">
                                                         <span class="appended-row" style="height:50px;width:100%;border-radius: 10px; border:0.5px solid #f7f8fc; padding:10px 12px; overflow: hidden; margin-bottom: 5px; display: inline-block;    background-color: #f7f8fc !important;">
                                                    <img src="${image}" alt="Image" width="25" height="25" class="rounded">
                                                    <span style="padding:5px 8px; border-radius:16px; border:0.5 px solid black;font-size:14px;">${name}</span>
                                                        <span class="close" id="close-id" onclick="deleteCat('${i}')" style="padding: 0px 4px !important;">×</span>
                                                    <span>
                                                </div>`);
                }
            }
            else {
                var formData = new FormData();
                formData.append("file", icon);
                $.ajax({
                    type: "POST",
                    url: "/Management/FileUpload",
                    dataType: "json",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (res) {
                        var category = {
                            "catImage": res,
                            "catName": categoryName,
                        }

                        categoryList.push(category);

                        $("#appendRow").html("");

                        for (var i = 0; i < categoryList.length > 0; i++) {
                            var image = categoryList[i].catImage;
                            var name = categoryList[i].catName;
                            // Append a new row with the values to the appendingRow div
                            $("#appendRow").append(`<div id="cat${i}" class="appended-row col-md-12 col-lg-6">
                                                         <span class="appended-row" style="height:50px;width:100%;border-radius: 10px; border:0.5px solid #f7f8fc; padding:10px 12px; overflow: hidden; margin-bottom: 5px; display: inline-block;    background-color: #f7f8fc !important;">
                                                    <img src="${image}" alt="Image" width="25" height="25" class="rounded">
                                                    <span style="padding:5px 8px; border-radius:16px; border:0.5 px solid black;font-size:14px;">${name}</span>
                                                        <span class="close" id="close-id" onclick="deleteCat('${i}')" style="padding: 0px 4px !important;">×</span>
                                                    <span>
                                                </div>`);
                        }
                    },
                    error: function (error) {
                        toastr.error("Error", error.message);
                        return error;
                    },
                });
            }


            // Clear input fields
            $("#outputimage").attr("src", "/content/dist/img/categoryimage.png");
            $("#catName").val("");
            $("#catfile").val("");
        }
    });

    function deleteCat(index){
        for(var i = 0; i< categoryList.length>0;i++){
            if(i == index){
                //var catindex = categoryList[i];
                categoryList.splice(index, 1);
                $("#cat" + index).remove();
            }
        }
        $("#appendRow").html("");

        for (var i = 0; i < categoryList.length > 0; i++) {
            var image = categoryList[i].catImage;
            var name = categoryList[i].catName;
            // Append a new row with the values to the appendingRow div
            $("#appendRow").append(`<div id="cat${i}" class="appended-row col-md-12 col-lg-6">
                                                                 <span class="appended-row" style="height:50px;width:100%;border-radius: 10px; border:0.5px solid #f7f8fc; padding:10px 12px; overflow: hidden; margin-bottom: 5px; display: inline-block;    background-color: #f7f8fc !important;">
                                                            <img src="${image}" alt="Image" width="25" height="25" class="rounded">
                                                            <span style="padding:5px 8px; border-radius:16px; border:0.5 px solid black;font-size:14px;">${name}</span>
                                                                <span class="close" id="close-id" onclick="deleteCat('${i}')" style="padding: 0px 4px !important;">×</span>
                                                            <span>
                                                        </div>`);
        }
    }

    var categories = [];

    function addMeal(){
        categories = [];
        var executeHttpRequest = true;
        var name = $("#mealName").val();
        var icon = $("#file")[0].files[0];
        var file = $("#file").val();
        var start = $("#startTime").val();
        var end = $("#endTime").val();
        var starts = start.split(":");
        var ends = end.split(":");
        var formData = new FormData();

        console.log(start);
        console.log(starts);

        if (CheckNullUndefined(name)) {
            Toast.fire({ icon: 'warning', title: 'Meal Name is Required' });
            executeHttpRequest = false;
        }
        else if (CheckNullUndefined(start)) {
            Toast.fire({ icon: 'warning', title: 'Start Time is Required' });
            executeHttpRequest = false;
        }
        else if (starts[1] != 00 && starts[1] != 30) {
            Toast.fire({ icon: 'warning', title: 'Minute part of Start Time must be 00 or 30' });
            executeHttpRequest = false;
        }
        else if (CheckNullUndefined(end)) {
            Toast.fire({ icon: 'warning', title: 'End Time is Required' });
            executeHttpRequest = false;
        }
        else if(ends[1] != 00 && ends[1] != 30){
            Toast.fire({ icon: 'warning', title: 'Minute part of End Time must be 00 or 30' });
            executeHttpRequest = false;
        }
        else if (starts[0] == ends[0] && starts[1] == ends[1]) {
            Toast.fire({ icon: 'warning', title: 'Start Time and End Time cannot same' });
            executeHttpRequest = false;
        }
        else if(start > end){
            Toast.fire({ icon: 'warning', title: 'Start Time must be less than End Time' });
            executeHttpRequest = false;
        }
        else if (categoryList.length == 0) {
            Toast.fire({ icon: 'warning', title: 'Categories are Required' });
            executeHttpRequest = false;
        }
        else if (CheckNullUndefined(icon)) {
            Toast.fire({ icon: 'warning', title: 'Please add Meal Image' });
            executeHttpRequest = false;
        }

        if (categoryList != null) {
            for (var i = 0; i < categoryList.length > 0; i++) {
                var formData = new FormData();
                var index = categoryList[i];
                var image = categoryList[i].catImage;
                var catname = categoryList[i].catName;

                var category = {
                    "catImage": image,
                    "catName": catname,
                }

                categories.push(category);
            }
        }

        if (executeHttpRequest == true) {
            formData.append("file", icon);
            $.ajax({
                type: "POST",
                url: "/Management/FileUpload",
                dataType: "json",
                contentType: false,
                processData: false,
                data: formData,
                success: function (res) {
                    var data = {};
                    data.mealPic = res;
                    data.mealName = name;
                    data.startTime = start;
                    data.endTime = end;
                    data.categories = categories;
                    console.log(data);
                    loadHttpRequest("POST", "/Management/MealCreate", createMealHandler, JSON.stringify(data));
                },
                error: function (error) {
                    toastr.error("Error", error.message);
                    return error;
                },
            });

        }
    }

    function createMealHandler(evt) {
        Swal.fire({
            title: 'Meal Created successfully',
            icon: 'success',
            //imageUrl: '/Images/Group 227317.png',
            //imageAlt: 'Custom image',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            categories = []; //to empty list after creation of meal
            table.draw();
            $('#meal-modal').modal('hide');
        })
    }

    //Update Feature
    function showUpdateModal(mealId) {
        $("#appendRow").html("");
        categoryList = [];
        //var categoryId = $(this).attr("data-categoryId");
        $("#bodyId").val(mealId);
        //alert($("#bodyId").val());
        $.ajax({
            type: 'GET',
            url: '/Management/GetMeal?mealId=' + mealId,
            async: true,
            processData: false,
            contentType: false,
            success: function (res) {
                $("#mealName").val(res.mealName);
                $("#startTime").val(res.startTime);
                $("#endTime").val(res.endTime);
                $("#output").attr("src", res.mealPic);
                $("#mealImage").val(res.mealPic);
                if (res.categories != null) {
                    for (var i = 0; i < res.categories.length > 0; i++) {
                        var image = res.categories[i].catImage;
                        var name = res.categories[i].catName;
                        // Append a new row with the values to the appendingRow div
                        $("#appendRow").append(`
                                                <div id="cat${i}" class="appended-row col-md-12 col-lg-6">
                                                     <span class="appended-row" style="height:50px;width:100%;border-radius: 10px; border:0.5px solid #f7f8fc; padding:10px 12px; overflow: hidden; margin-bottom: 5px; display: inline-block;    background-color: #f7f8fc !important;">
                                                <img src="${image}" alt="Image" width="25" height="25" class="rounded">
                                                <span style="padding:5px 8px; border-radius:16px; border:0.5 px solid black;font-size:14px;">${name}</span>
                                                    <span class="close cross" id="close-id" onclick="deleteCat('${i}')" style="padding: 0px 4px !important;">×</span>
                                                <span>
                                            </div>
                                        `);
                        var category = {
                            "catImage": image,
                            "catName": name,
                        }

                        categoryList.push(category);
                    }
                }
            },
            error: function (error) {
                return error;
            },
        });

        //change modal title
        $("#modal-overlay-title").html("Edit Meals");
        //show button
        $("#addButton").addClass("d-none");
        $("#editButton").removeClass("d-none");

        //show modal
        $("#meal-modal").modal("toggle");
    }

    function updateMeal() {
        categories = [];
        var executeHttpRequest = true;
        var Id = $("#bodyId").val();
        var name = $("#mealName").val();
        var icon = $("#file")[0].files[0];
        var file = $("#file").val();
        var start = $("#startTime").val();
        var end = $("#endTime").val();
        var starts = start.split(":");
        var ends = end.split(":");
        var formData = new FormData();

        if (CheckNullUndefined(name)) {
            Toast.fire({ icon: 'warning', title: 'Meal Name is Required' });
            executeHttpRequest = false;
        }
        else if (CheckNullUndefined(start)) {
            Toast.fire({ icon: 'warning', title: 'Start Time is Required' });
            executeHttpRequest = false;
        }
        else if (starts[1] != 00 && starts[1] != 30) {
            Toast.fire({ icon: 'warning', title: 'Minute part of Start Time must be 00 or 30' });
            executeHttpRequest = false;
        }
        else if (CheckNullUndefined(end)) {
            Toast.fire({ icon: 'warning', title: 'End Time is Required' });
            executeHttpRequest = false;
        }
        else if (ends[1] != 00 && ends[1] != 30) {
            Toast.fire({ icon: 'warning', title: 'Minute part of End Time must be 00 or 30' });
            executeHttpRequest = false;
        }
        else if (starts[0] == ends[0] && starts[1] == ends[1]) {
            Toast.fire({ icon: 'warning', title: 'Start Time and End Time cannot same' });
            executeHttpRequest = false;
        }
        else if (start > end) {
            Toast.fire({ icon: 'warning', title: 'Start Time must be less than End Time' });
            executeHttpRequest = false;
        }
        else if (categoryList.length == 0) {
            Toast.fire({ icon: 'warning', title: 'Categories are Required' });
            executeHttpRequest = false;
        }
        //else if (CheckNullUndefined(icon)) {
        //    Toast.fire({ icon: 'warning', title: 'Please add Meal Image' });
        //    executeHttpRequest = false;
        //}

        if (categoryList != null) {
            for (var i = 0; i < categoryList.length > 0; i++) {
                var formData = new FormData();
                var index = categoryList[i];
                var image = categoryList[i].catImage;
                var catname = categoryList[i].catName;

                var category = {
                    "catImage": image,
                    "catName": catname,
                }

                categories.push(category);
            }
        }

        if(file == ""){
            var image = $("#mealImage").val();
            if (executeHttpRequest == true) {
                var data = {};
                data.id = Id
                data.mealPic = image;
                data.mealName = name;
                data.startTime = start;
                data.endTime = end;
                data.categories = categories;
                console.log(data);
                loadHttpRequest("POST", "/Management/MealUpdate", updateMealHandler, JSON.stringify(data));

            }
        }
        else{
            if (executeHttpRequest == true) {
                formData.append("file", icon);
                $.ajax({
                    type: "POST",
                    url: "/Management/FileUpload",
                    dataType: "json",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (res) {
                        var data = {};
                        data.id = Id;
                        data.mealPic = res;
                        data.mealName = name;
                        data.startTime = start;
                        data.endTime = end;
                        data.categories = categories;
                        console.log(data);
                        loadHttpRequest("POST", "/Management/MealUpdate", updateMealHandler, JSON.stringify(data));
                    },
                    error: function (error) {
                        toastr.error("Error", error.message);
                        return error;
                    },
                });

            }
        }
    }

    function updateMealHandler(evt) {
        Swal.fire({
            title: 'Meal Updated successfully',
            icon: 'success',
            //imageUrl: '/Images/Group 227317.png',
            //imageAlt: 'Custom image',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            categories = []; //to empty list after creation of meal
            table.draw();
            $('#meal-modal').modal('hide');
        })
    }
</script>
