
<style>
    .label {
        font-family: PoppinsFontmedium;
    }

    .card1 {
        box-shadow: 0 0 1px rgba(0, 0, 0, 0.125), 0 1px 3px rgba(0, 0, 0, 0.0);
        margin-bottom: 1rem;
    }

    .item-option {
        display: flex;
        align-items: center; /* Center vertically */
        justify-content:space-between;
    }

    /* Style the label and checkbox */
        .item-option label {
        margin-right: 10px; /* Add space between label and checkbox */
    }

    .modal-header div {
        margin-bottom: 10px; /* Add margin to create space between div elements */
    }

    a {
        color: #1F2D3D;
        text-decoration: none;
        background-color: transparent;
    }

    .adjust {
        position: absolute;
        width: 17px;
        height: 17px;
        top: 47px;
        right: 17px;
    }

    .checkbox-item {
        width: 20px;
        height: 16px;
/*        position: absolute;
        top: 4px;
        left: 205px;*/
    }

    .arrow {
        position: absolute;
        top: 71px;
        cursor: pointer;
    }

    .selected-meals {
        border: 1px solid #ccc;
        padding: 10px;
        margin-top: 10px;
    }

    .btn-category {
        font-size: 14px;
        font-family: PoppinsFont;
        border-radius: 10px;
        color: #5F5F5F;
        background-color: #EBEBEB;
    }

    .active-category {
        color: #010C80;
        background-color: #26BDF4;
    }

    input[type=checkbox]:checked::before {
        content: "";
        display: block;
        position: relative;
        text-align: center;
        height: 17px;
        width: 17px;
        background-color: #fff;
        color: #fff;
        font-family: "Montserrat";
        border-radius: 3px;
        border: 2px solid #77D4FC;
    }

    input[type=checkbox]:checked::after {
        content: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="11" height="11" fill="skyBlue" viewBox="0 0 24 24"><path d="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z"/></svg>');
        display: block;
        position: relative;
        left: 3px;
        top: -20px;
    }

    input[type=checkbox] {
        accent-color: #fff;
        position: relative;
        margin-right: 10px;
        width: 16px;
        height: 16px;
        top: -4px !important;
    }

    @@media(max-width:765px) {
        input[type=checkbox]:checked::after {
            top: -18px !important;
        }
    }

    .radio-item{
        width: 16px;
        height: 16px;
    }
    @@media(min-width:765px){
        .modal-items {
            width: 600px !important;
        }
    }

    .category-option {
        display: flex;
    }

    label {
        font-family: PoppinsFont !important;
        font-size: 13px !important;
    }

    input[type=radio]:checked::before {
        content: "";
        display: block;
        position: relative;
        text-align: center;
        height: 17px;
        width: 17px;
        background-color: #fff;
        color: #fff;
        font-family: "Montserrat";
        border-radius: 20px;
        border: 2px solid #77D4FC;
    }

    input[type=radio]:checked::after {
        content: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24"> <circle cx="12" cy="12" r="10" fill="skyBlue"/><circle cx="12" cy="12" r="6" fill="skyBlue"/></svg>');
        display: block;
        position: relative;
        left: 3px;
        top: -20px;
    }

    input[type=radio] {
        accent-color: #fff;
        position: relative;
        margin-right: 10px;
        width: 16px;
        height: 16px;
        top: 2px !important;
    }

    @@media(max-width:765px) {
        input[type=radio]:checked::after {
            top: -18px !important;
        }
    }

</style>

<div class="container-fluid">
    <a href="/Management/CompanyMeals" class="arrow-link">
        <i class="fa fa-arrow-left arrow" aria-hidden="true"></i>
        <h3 style="margin-left: 20px;">@TempData.Peek("mealTypeName-edit")</h3>
    </a>
    <div class="card" style="border-radius: 15px;">
        <div class="card-body" style="min-height:450px">
            <div class="container-fluid">

                <div class="row">
                    <div class="col-md-4">
                        <h3>@TempData.Peek("companyNamesSring")</h3>
                    </div>
                    <div class="col-md-8" id="buttons">
                        <button type="button" class="btnmanager1 no-wrap" style="background-color : #010C80; color:#fff" id="btn-add-items">+ Add Items</button>
                        <div class="float-right mr-2">
                            <input type="text" class="form-control" id="searchInput" placeholder="Search" style="border-radius: 20px; width : auto;padding-right:30px;">
                            <img id="image" src="/Images/search-24px.png" style="position: absolute;top: 7px;right: 190px;">
                        </div>
                        @*<button type="button" class="btnmanager1 no-wrap mr-2" style="background-color : #77D4FC; color:black" id="btn-save-all">Save</button>*@
                    </div>
                    <div class="row mt-2" style="margin-bottom:20px;">
                        <div class="col-md-12 category-buttons">
@*                          <button class="btn btn-category py-2 active-category" value="1" id="btn-1">Breakfast choice</button>
                            <button class="btn btn-category py-2" value="2" id="btn-2">Breakfast Side</button>*@
                        </div>
                    </div>
                </div>

                <div id="btn-hide" class="d-none">
@*                    <div class="row justify-content-center align-items-center text-center " style="margin-top : 60px;">
                        <div class="col">
                            <img src="~/Images/Group 2309661.png" alt="Your Image Alt Text" />
                        </div>
                    </div>
                    <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                        <div class="col">
                            <h4>No Items</h4>
                        </div>
                    </div>
                    <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                        <div class="col">
                            <p>The selected menu type doesn't have any   <br /> items added to it.</p>
                        </div>
                    </div>*@
                </div>

            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="selected-items" class="row">

                    </div>
                </div>
            </div>

        </div>
    </div>

</div>

<!-- Add Items Modal -->
<div class="modal fade" id="add-items-modal" role="dialog">
    <div class="modal-dialog modal-lg modal-items">
        <!-- Modal content-->
        <div class="modal-content" style="border-radius: 12px;">
            <div class="modal-header">
                <h6 style="font-family:PoppinsFontmedium !important;font-weight:900;">Add Items</h6>

                <span class="close cross" id="addItems-close">&times;</span>
            </div>
            <div class="modal-body">
                <!-- Search Field -->
                <h6 style="font-family:PoppinsFontmedium;">Select Sub category</h6>
                <div class="row" id="appendcategories">
                    <div class="col-md-4 category-option">
                        <label for="item-1">BreakFast Choice</label>
                        <input type="radio" class="radio-item" id="item-1">
                        <input type="hidden" class="item-id" value="1" />
                    </div>
                    <div class="col-md-4 category-option">
                        <label for="radio">BreakFast Side</label>
                        <input type="checkbox" class="radio-item" id="item-1">
                        <input type="hidden" class="item-id" value="1" />
                    </div>
                </div>
                <div class="row mt-4">
                    <div class="col-md-6">
                        <h6 style="font-family:PoppinsFontmedium;">Select Items</h6>
                    </div>
                    <br />
                    <br />
                    <div class="col-md-6">
                        <div class="form-group">
                            <input type="text" class="form-control" id="searchinput" placeholder="Search" style="border-radius: 20px;">
                            <img src="~/Images/search-24px.png" style="position: absolute;top: 10px;right: 18px;" />
                        </div>
                    </div>
                </div>

                <div class="ingredients">
                    <div class="row" id="item-options-div">
                        <div class="col-md-6 item-option">
                            <label for="item-1">Pasta</label>
                            <input type="checkbox" class="checkbox-item" id="item-1">
                            <input type="hidden" class="item-id" value="1" />
                        </div>
                        <div class="col-md-6 item-option">
                            <label for="item-2">Tacos</label>
                            <input type="checkbox" class="checkbox-item" id="item-2">
                            <input type="hidden" class="item-id" value="2" />
                        </div>
                    </div>
                </div>

                <div class="form-group text-center">
                    <button width="width : 80%" style=" width: 228px; height: 43px; border-radius:41px; font-family: Open_SansBold;font-size: 15px; margin-top: 30px;" class="btn btn-theme2" id="items-save">
                        Save
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>

<script>

    //remove item 
    function removeItem(categoryId, itemId,button) {

        //var card = button.closest('.itemDiv');

        //if (card) {

        //    //unchecks item from modal
        //    let itemId = $(button).siblings('input').val();
        //    console.log(itemId);
        //    $('#item-options-div input:hidden[value=' + itemId + ']').siblings('input').prop('checked', false);

        //    //removes item
        //    card.remove();

        //}

        //confirmation alert
        title = '<span class="text-danger">Are you sure, you want to permanently delete this Item?</span>';
        confirmButtonText = 'Yes, Delete it!';

        swal.fire({
            title: title,
            icon: 'warning',
            allowOutsideClick: false,
            showCloseButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            showCancelButton: true,
            confirmButtonText: confirmButtonText
        }).then((result) => {
            if (result.isConfirmed) {
                var data = {};
                data.itemId = itemId;
                data.categoryId = categoryId;

                loadHttpRequest("POST", "/Management/RemoveOrgMealItem", removeItemsHandler, JSON.stringify(data));
                //loadHttpRequest("POST", "/Management/DeleteOrgMeal?orgMealId=" + orgMealId, deleteCallback);
            }
        });
    }

    $(document).on('change', 'input:radio[class=radio-item]', function () {
        if ($(this).prop('checked')) {
            // Checkbox is checked, uncheck other checkboxes in the same group
            $('input:radio[class=radio-item]').not(this).prop('checked', false);
        }
    });

    function removeItemsHandler(evt) {
        Swal.fire({
            title: 'Your Selected Item get Remove',
            //text: 'Menu of the chosen day and meal has been updated successfully for the selected company',
            //imageUrl: '/content/dist/img/SwalSuccess.png',
            //imageAlt: 'Success Icon',
            icon: 'success',
            timer: 2000,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {

            //get orgMeal Categories
            $.ajax({
                type: "GET",
                url: "/Management/GetOrgMealCategories",
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (res) {
                    console.log(res);

                    getOrgMealCatsHandler(res);
                },
                error: function (error) {
                    loaderdiv.innerhtml = '';
                    toastr.error("Error", error.message);
                    return error;
                },
            });

            function getOrgMealCatsHandler(res) {
                console.log('category handler');

                //get orgMeal Items
                $.ajax({
                    type: "GET",
                    url: "/Management/GetOrgMealItems",
                    dataType: "json",
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        console.log(res);

                        getOrgMealItemsHandler(res);
                    },
                    error: function (error) {
                        loaderdiv.innerhtml = '';
                        toastr.error("Error", error.message);
                        return error;
                    },
                });
                //appends categories
                $("#appendcategories").html("");

                for (let category of res) {
                    $("#add-items-modal #appendcategories").append(
                        `    <div class="col-md-4 category-option">
                                            <input type="radio" class="radio-item" id="item-${category.id}" value="${category.id}">
                                            <input type="hidden" class="item-id" value="${category.id}" />
                                            <label for="item-${category.id}" style="font-family:PoppinsFontmedium;" class="ml-1">${category.name}</label>
                                </div>`
                    );
                }

                //appends category tabs
                $('.category-buttons').empty();

                for (let category of res) {
                    $(".category-buttons").append(
                        `<button class="btn btn-category py-2" title="${category.name}" value="${category.id}" >${category.name.length > 15 ? `${category.name.slice(0, 15)}...` : category.name}</button>`
                    );
                }

                //actives first category tab
                $('.btn-category').removeClass('active-category');
                $('.btn-category').first().addClass('active-category');

                //get orgMeal Items
                $.ajax({
                    type: "GET",
                    url: "/Management/GetOrgMealItems",
                    dataType: "json",
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        console.log(res);

                        getOrgMealItemsHandler(res);
                    },
                    error: function (error) {
                        loaderdiv.innerhtml = '';
                        toastr.error("Error", error.message);
                        return error;
                    },
                });

            }

            function getOrgMealItemsHandler(res) {
                console.log('items handler');

                $('#selected-items').empty();
                for (let orgMealItem of res) {
                    //appends items in div
                    $('#selected-items').append(
                        `<div class="col-md-3 itemDiv d-none">
                                                    <div class="card card1" style="background-color: #F9F9FB;">
                                                        <div class="card-body row">
                                                            <label class="col-10 mb-0">${orgMealItem.name}</label>
                                                            <div class="col-2">
                                                                        <span class="close cross" onclick="removeItem('${orgMealItem.orgMealCategoryId}','${orgMealItem.itemId}',$(this))">&times;</span>
                                                                <input type="hidden" data-categoryId="${orgMealItem.orgMealCategoryId}" class="selected-item-id" value="${orgMealItem.itemId}" />
                                                            <div/>
                                                        </div>
                                                    </div>
                                                </div>`
                    );
                }

                //shows first tab items
                let firstCatId = $('.btn-category').first().val();
                $('.itemDiv').addClass('d-none');
                $('#selected-items input:hidden[data-categoryId=' + firstCatId + ']').each(function () {

                    $(this).closest('.itemDiv').removeClass('d-none');

                });

                //category select logic
                $('.btn-category').click(function () {
                    //button active
                    $('button.active-category').removeClass('active-category')
                    $(this).addClass('active-category');

                    //items show
                    $('.itemDiv').addClass('d-none');
                    let catId = $(this).val();
                    if ($('#selected-items input:hidden[data-categoryId=' + catId + ']').length > 0) {
                        if ($("#btn-hide").hasClass("d-none")) {

                        }
                        else {
                            $("#btn-hide").addClass("d-none");
                        }
                        $('#selected-items input:hidden[data-categoryId=' + catId + ']').each(function () {

                            $(this).closest('.itemDiv').removeClass('d-none');

                        });
                    }
                    else {
                        if ($("#btn-hide").hasClass("d-none")) {
                            $("#btn-hide").removeClass("d-none");
                            $("#btn-hide").empty();
                            $("#btn-hide").append(`<div class="row justify-content-center align-items-center text-center " style="margin-top : 60px;">
                                        <div class="col">
                                            <img src="/Images/Group 2309661.png" alt="Your Image Alt Text" />
                                        </div>
                                    </div>
                                    <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                                        <div class="col">
                                            <h4>No Items</h4>
                                        </div>
                                    </div>
                                    <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                                        <div class="col">
                                            <p>The selected menu type doesn't have any   <br /> items added to it.</p>
                                        </div>
                                    </div>`);
                        }
                        else {
                        }
                        //$("#selected-items").append(`<div class="row justify-content-center align-items-center text-center " style="margin-top : 60px;">
                        //            <div class="col">
                        //                <img src="/Images/Group 2309661.png" alt="Your Image Alt Text" />
                        //            </div>
                        //        </div>
                        //        <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                        //            <div class="col">
                        //                <h4>No Items</h4>
                        //            </div>
                        //        </div>
                        //        <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                        //            <div class="col">
                        //                <p>The selected menu type doesn't have any   <br /> items added to it.</p>
                        //            </div>
                        //        </div>`);
                    }

                });

            }

            //Show Add Items Feature
            $('#btn-add-items').click(function () {

                //gets available items array
                const availableItems = [];
                $('#selected-items input:hidden').each(function () {
                    availableItems.push($(this).val());
                });
                console.log(availableItems);

                $.ajax({
                    type: "POST",
                    url: "/Management/GetSelectiveItems",
                    dataType: "json",
                    contentType: "application/json",
                    processData: false,
                    data: JSON.stringify(availableItems),
                    success: function (res) {
                        console.log(res);

                        //appends items in modal
                        $('#item-options-div').empty();

                        for (let item of res) {

                            $('#item-options-div').append(
                                `<div class="col-md-6 item-option">
                                                    <label for="item-${item.id}" title="${item.name}">${item.name}</label>
                                            <input type="checkbox" class="checkbox-item" id="item-${item.id}" value="${item.id}">
                                            <input type="hidden" class="item-id" value="${item.id}" />
                                        </div>`
                            );
                        }


                        // add event listener to handle checkbox change
                        $('.checkbox-item').change(function () {
                            let executeHandler = true;

                            //check
                            var categoryId = "";
                            $('input:radio[class=radio-item]:checked').each(function () {
                                var data = {};
                                categoryId = $(this).val();
                            });
                            console.log(categoryId);
                            if (categoryId === null) {
                                Toast.fire({ icon: 'warning', title: 'Select a Subcategory first.' });
                                $(this).prop('checked', false); // Unchecks it
                                executeHandler = false;
                            }

                            if (executeHandler == true) {
                                handleCheckboxChange($(this), categoryId);
                            }
                        });

                        // function to handle checkbox changes
                        function handleCheckboxChange(checkbox, categoryId) {
                            if (checkbox.is(':checked')) {
                                createCard(checkbox, categoryId);
                            }
                            else {
                                let text = checkbox.siblings('label').text();
                                // Remove the card if the checkbox is unchecked
                                $('#selected-items .itemDiv:contains(' + text + ')').remove();
                            }
                        }

                        // append selected items
                        function createCard(checkbox, categoryId) {
                            let label = checkbox.siblings('label').text();
                            let id = checkbox.siblings('input').val();

                            console.log(label);
                            console.log(id);

                            let activeButtonCategory = $('.active-category').val();

                            //with or without d-none
                            if (activeButtonCategory == categoryId) {
                                $('#selected-items').append(
                                    `<div class="col-md-3 itemDiv d-none">
                                                <div class="card card1" style="background-color: #F9F9FB;">
                                                    <div class="card-body row">
                                                        <label class="col-10 mb-0">${label}</label>
                                                        <div class="col-2">
                                                                <span class="close cross" onclick="removeItem('${orgMealItem.orgMealCategoryId}','${orgMealItem.itemId}',$(this))">&times;</span>
                                                            <input type="hidden" data-categoryId="${categoryId}" class="selected-item-id" value="${id}" />
                                                        <div/>
                                                    </div>
                                                </div>
                                            </div>`
                                );
                            }
                            else {
                                $('#selected-items').append(
                                    `<div class="col-md-3 itemDiv d-none">
                                                <div class="card card1" style="background-color: #F9F9FB;">
                                                    <div class="card-body row">
                                                        <label class="col-10 mb-0">${label}</label>
                                                        <div class="col-2">
                                                                <span class="close cross" onclick="removeItem('${orgMealItem.orgMealCategoryId}','${orgMealItem.itemId}',$(this))">&times;</span>
                                                            <input type="hidden" data-categoryId="${categoryId}" class="selected-item-id" value="${id}" />
                                                        <div/>
                                                    </div>
                                                </div>
                                            </div>`
                                );
                            }

                        }

                    },
                    error: function (error) {
                        toastr.error("Error", error.message);
                        return error;
                    },
                });

                //shows modal
                $('#add-items-modal').modal('show');

            });
        })
    }

    function saveAll(){
        //gets selected items array
        var categoryid = $("#subcategory-options").val();
        console.log(categoryid);
        var executeHttpRequest = true;
        const selectedItems = [];
        $('input:checkbox[class="item-id"]:checked').each(function () {
            alert($(this).val());
            var data = {};
            data.itemId = $(this).val();
            data.categoryId = categoryid;

            selectedItems.push(data);
        });
        console.log(selectedItems);

        if(selectedItems.length == 0){
            Toast.fire({ icon: 'warning', title: 'Select a Items for SubCategory.' });
            executeHttpRequest = false;
        }

        if(executeHttpRequest == true){
            loadHttpRequest("POST", "/Management/UpdateOrgMealItems", updateItemsHandler, JSON.stringify(selectedItems));
        }
    }

    function updateItemsHandler(evt) {
        Swal.fire({
            title: 'Menu Added Successfully',
            //text: 'Menu of the chosen day and meal has been updated successfully for the selected company',
            //imageUrl: '/content/dist/img/SwalSuccess.png',
            //imageAlt: 'Success Icon',
            icon: 'success',
            timer: 2000,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function () {
            //get orgMeal Categories
            $.ajax({
                type: "GET",
                url: "/Management/GetOrgMealCategories",
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (res) {
                    console.log(res);

                    getOrgMealCatsHandler(res);
                },
                error: function (error) {
                    loaderdiv.innerhtml = '';
                    toastr.error("Error", error.message);
                    return error;
                },
            });

            function getOrgMealCatsHandler(res) {
                console.log('category handler');

                //get orgMeal Items
                $.ajax({
                    type: "GET",
                    url: "/Management/GetOrgMealItems",
                    dataType: "json",
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        console.log(res);

                        getOrgMealItemsHandler(res);
                    },
                    error: function (error) {
                        loaderdiv.innerhtml = '';
                        toastr.error("Error", error.message);
                        return error;
                    },
                });
                //appends categories
                $("#appendcategories").html("");

                for (let category of res) {
                    $("#add-items-modal #appendcategories").append(
                        `    <div class="col-md-4 category-option">
                                                <input type="radio" class="radio-item" id="item-${category.id}" value="${category.id}">
                                                <input type="hidden" class="item-id" value="${category.id}" />
                                                <label for="item-${category.id}" style="font-family:PoppinsFontmedium;" class="ml-1">${category.name}</label>
                                    </div>`
                    );
                }

                //appends category tabs
                $('.category-buttons').empty();

                for (let category of res) {
                    $(".category-buttons").append(
                        `<button class="btn btn-category py-2" title="${category.name}" value="${category.id}" >${category.name.length > 15 ? `${category.name.slice(0, 15)}...` : category.name}</button>`
                    );
                }

                //actives first category tab
                $('.btn-category').removeClass('active-category');
                $('.btn-category').first().addClass('active-category');

                //get orgMeal Items
                $.ajax({
                    type: "GET",
                    url: "/Management/GetOrgMealItems",
                    dataType: "json",
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        console.log(res);

                        getOrgMealItemsHandler(res);
                    },
                    error: function (error) {
                        loaderdiv.innerhtml = '';
                        toastr.error("Error", error.message);
                        return error;
                    },
                });

            }

            function getOrgMealItemsHandler(res) {
                console.log('items handler');

                $('#selected-items').empty();
                if($("#selected-items").hasClass("row")){

                }
                else{
                    $("#selected-items").addClass("row")
                }
                for (let orgMealItem of res) {
                    //appends items in div
                    $('#selected-items').append(
                        `<div class="col-md-3 itemDiv d-none">
                                                        <div class="card card1" style="background-color: #F9F9FB;">
                                                            <div class="card-body row">
                                                                <label class="col-10 mb-0">${orgMealItem.name}</label>
                                                                <div class="col-2">
                                                                            <span class="close cross" onclick="removeItem('${orgMealItem.orgMealCategoryId}','${orgMealItem.itemId}',$(this))">&times;</span>
                                                                    <input type="hidden" data-categoryId="${orgMealItem.orgMealCategoryId}" class="selected-item-id" value="${orgMealItem.itemId}" />
                                                                <div/>
                                                            </div>
                                                        </div>
                                                    </div>`
                    );
                }

                //shows first tab items
                let firstCatId = $('.btn-category').first().val();
                $('.itemDiv').addClass('d-none');
                $('#selected-items input:hidden[data-categoryId=' + firstCatId + ']').each(function () {

                    $(this).closest('.itemDiv').removeClass('d-none');

                });

                //category select logic
                $('.btn-category').click(function () {
                    //button active
                    $('button.active-category').removeClass('active-category')
                    $(this).addClass('active-category');

                    //items show
                    $('.itemDiv').addClass('d-none');
                    let catId = $(this).val();
                    if ($('#selected-items input:hidden[data-categoryId=' + catId + ']').length > 0) {
                        if ($("#btn-hide").hasClass("d-none")) {

                        }
                        else {
                            $("#btn-hide").addClass("d-none");
                        }
                        $('#selected-items input:hidden[data-categoryId=' + catId + ']').each(function () {

                            $(this).closest('.itemDiv').removeClass('d-none');

                        });
                    }
                    else {
                        if ($("#btn-hide").hasClass("d-none")) {
                            $("#btn-hide").removeClass("d-none");
                            $("#btn-hide").empty();
                            $("#btn-hide").append(`<div class="row justify-content-center align-items-center text-center " style="margin-top : 60px;">
                                            <div class="col">
                                                <img src="/Images/Group 2309661.png" alt="Your Image Alt Text" />
                                            </div>
                                        </div>
                                        <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                                            <div class="col">
                                                <h4>No Items</h4>
                                            </div>
                                        </div>
                                        <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                                            <div class="col">
                                                <p>The selected menu type doesn't have any   <br /> items added to it.</p>
                                            </div>
                                        </div>`);
                        }
                        else {
                        }
                        //$("#selected-items").append(`<div class="row justify-content-center align-items-center text-center " style="margin-top : 60px;">
                        //            <div class="col">
                        //                <img src="/Images/Group 2309661.png" alt="Your Image Alt Text" />
                        //            </div>
                        //        </div>
                        //        <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                        //            <div class="col">
                        //                <h4>No Items</h4>
                        //            </div>
                        //        </div>
                        //        <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                        //            <div class="col">
                        //                <p>The selected menu type doesn't have any   <br /> items added to it.</p>
                        //            </div>
                        //        </div>`);
                    }

                });

            }

            //Show Add Items Feature
            $('#btn-add-items').click(function () {

                //gets available items array
                const availableItems = [];
                $('#selected-items input:hidden').each(function () {
                    availableItems.push($(this).val());
                });
                console.log(availableItems);

                $.ajax({
                    type: "POST",
                    url: "/Management/GetSelectiveItems",
                    dataType: "json",
                    contentType: "application/json",
                    processData: false,
                    data: JSON.stringify(availableItems),
                    success: function (res) {
                        console.log(res);

                        //appends items in modal
                        $('#item-options-div').empty();

                        for (let item of res) {

                            $('#item-options-div').append(
                                `<div class="col-md-6 item-option">
                                                        <label for="item-${item.id}" title="${item.name}">${item.name}</label>
                                                <input type="checkbox" class="checkbox-item" id="item-${item.id}" value="${item.id}">
                                                <input type="hidden" class="item-id" value="${item.id}" />
                                            </div>`
                            );
                        }


                        // add event listener to handle checkbox change
                        $('.checkbox-item').change(function () {
                            let executeHandler = true;

                            //check
                            var categoryId = "";
                            $('input:radio[class=radio-item]:checked').each(function () {
                                var data = {};
                                categoryId = $(this).val();
                            });
                            console.log(categoryId);
                            if (categoryId === null) {
                                Toast.fire({ icon: 'warning', title: 'Select a Subcategory first.' });
                                $(this).prop('checked', false); // Unchecks it
                                executeHandler = false;
                            }

                            if (executeHandler == true) {
                                handleCheckboxChange($(this), categoryId);
                            }
                        });

                        // function to handle checkbox changes
                        function handleCheckboxChange(checkbox, categoryId) {
                            if (checkbox.is(':checked')) {
                                createCard(checkbox, categoryId);
                            }
                            else {
                                let text = checkbox.siblings('label').text();
                                // Remove the card if the checkbox is unchecked
                                $('#selected-items .itemDiv:contains(' + text + ')').remove();
                            }
                        }

                        // append selected items
                        function createCard(checkbox, categoryId) {
                            let label = checkbox.siblings('label').text();
                            let id = checkbox.siblings('input').val();

                            console.log(label);
                            console.log(id);

                            let activeButtonCategory = $('.active-category').val();

                            //with or without d-none
                            if (activeButtonCategory == categoryId) {
                                $('#selected-items').append(
                                    `<div class="col-md-3 itemDiv d-none">
                                                    <div class="card card1" style="background-color: #F9F9FB;">
                                                        <div class="card-body row">
                                                            <label class="col-10 mb-0">${label}</label>
                                                            <div class="col-2">
                                                                    <span class="close cross" onclick="removeItem('${orgMealItem.orgMealCategoryId}','${orgMealItem.itemId}',$(this))">&times;</span>
                                                                <input type="hidden" data-categoryId="${categoryId}" class="selected-item-id" value="${id}" />
                                                            <div/>
                                                        </div>
                                                    </div>
                                                </div>`
                                );
                            }
                            else {
                                $('#selected-items').append(
                                    `<div class="col-md-3 itemDiv d-none">
                                                    <div class="card card1" style="background-color: #F9F9FB;">
                                                        <div class="card-body row">
                                                            <label class="col-10 mb-0">${label}</label>
                                                            <div class="col-2">
                                                                    <span class="close cross" onclick="removeItem('${orgMealItem.orgMealCategoryId}','${orgMealItem.itemId}',$(this))">&times;</span>
                                                                <input type="hidden" data-categoryId="${categoryId}" class="selected-item-id" value="${id}" />
                                                            <div/>
                                                        </div>
                                                    </div>
                                                </div>`
                                );
                            }

                        }

                    },
                    error: function (error) {
                        toastr.error("Error", error.message);
                        return error;
                    },
                });

                //shows modal
                $('#add-items-modal').modal('show');

            });
        })
    }

    $(document).ready(function () {

        $("#nav-office").addClass("active");
        // for changing image Of organization
        if ($('#office-white').hasClass('d-none')) {
            $('#office-white').removeClass('d-none');
            $('#office').addClass('d-none');
        }
        else {
            $('#office-white').addClass('d-none');
            $('#office').removeClass('d-none');
        }

        //get orgMeal Categories
        $.ajax({
            type: "GET",
            url: "/Management/GetOrgMealCategories",
            dataType: "json",
            contentType: false,
            processData: false,
            success: function (res) {
                console.log(res);

                getOrgMealCatsHandler(res);
            },
            error: function (error) {
                loaderdiv.innerhtml = '';
                toastr.error("Error", error.message);
                return error;
            },
        });

        function getOrgMealCatsHandler(res) {
            console.log('category handler');

            //get orgMeal Items
            $.ajax({
                type: "GET",
                url: "/Management/GetOrgMealItems",
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (res) {
                    console.log(res);

                    getOrgMealItemsHandler(res);
                },
                error: function (error) {
                    loaderdiv.innerhtml = '';
                    toastr.error("Error", error.message);
                    return error;
                },
            });

            //appends categories
            $("#appendcategories").html("");

            for (let category of res) {
                $("#add-items-modal #appendcategories").append(
                        `    <div class="col-md-4 category-option">
                                        <input type="radio" class="radio-item" id="item-${category.id}" value="${category.id}">
                                        <input type="hidden" class="item-id" value="${category.id}" />
                                        <label for="item-${category.id}" style="font-family:PoppinsFontmedium;" class="ml-1">${category.name}</label>
                            </div>`
                );
            }

            //appends category tabs
            $('.category-buttons').empty();

            for (let category of res) {
                $(".category-buttons").append(
                    `<button class="btn btn-category py-2" title="${category.name}" value="${category.id}" >${category.name.length > 15 ? `${category.name.slice(0, 15)}...` : category.name}</button>`
                );
            }

            //actives first category tab
            $('.btn-category').removeClass('active-category');
            $('.btn-category').first().addClass('active-category');

            //get orgMeal Items
            $.ajax({
                type: "GET",
                url: "/Management/GetOrgMealItems",
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (res) {
                    console.log(res);

                    getOrgMealItemsHandler(res);
                },
                error: function (error) {
                    loaderdiv.innerhtml = '';
                    toastr.error("Error", error.message);
                    return error;
                },
            });

        }

        function getOrgMealItemsHandler(res) {
            console.log('items handler');

            $('#selected-items').empty();
            if(res != null && res.length > 0){
                for (let orgMealItem of res) {
                    //appends items in div
                    $('#selected-items').append(
                        `<div class="col-md-3 itemDiv d-none">
                                            <div class="card card1" style="background-color: #F9F9FB;">
                                                <div class="card-body row">
                                                    <label class="col-10 mb-0">${orgMealItem.name}</label>
                                                    <div class="col-2">
                                                                <span class="close cross" onclick="removeItem('${orgMealItem.orgMealCategoryId}','${orgMealItem.itemId}',$(this))">&times;</span>
                                                        <input type="hidden" data-categoryId="${orgMealItem.orgMealCategoryId}" class="selected-item-id" value="${orgMealItem.itemId}" />
                                                    <div/>
                                                </div>
                                            </div>
                                        </div>`
                    );
                }

                //shows first tab items
                let firstCatId = $('.btn-category').first().val();
                $('.itemDiv').addClass('d-none');
                $('#selected-items input:hidden[data-categoryId=' + firstCatId + ']').each(function () {

                    $(this).closest('.itemDiv').removeClass('d-none');

                });
            }
            else{
                $("#selected-items").removeClass("row");
                $("#selected-items").append(`<div class="row justify-content-center align-items-center text-center " style="margin-top : 60px;">
                            <div class="col">
                                <img src="/Images/Group 2309661.png" alt="Your Image Alt Text" />
                            </div>
                        </div>
                        <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                            <div class="col">
                                <h4 style="font-family:PoppinsFontmedium;">No Items</h4>
                            </div>
                        </div>
                        <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                            <div class="col">
                                    <p style="font-family:PoppinsFontmedium;">The selected menu type doesn't have any   <br /> items added to it.</p>
                            </div>
                        </div>`);
            }


            //category select logic
            $('.btn-category').click(function () {
                //button active
                $('button.active-category').removeClass('active-category')
                $(this).addClass('active-category');

                //items show
                $('.itemDiv').addClass('d-none');
                let catId = $(this).val();
                if($('#selected-items input:hidden[data-categoryId=' + catId + ']').length > 0){
                    if($("#btn-hide").hasClass("d-none")){

                    }
                    else{
                        $("#btn-hide").addClass("d-none");
                    }
                    $('#selected-items input:hidden[data-categoryId=' + catId + ']').each(function () {

                        $(this).closest('.itemDiv').removeClass('d-none');

                    });
                }
                else{
                    if ($("#btn-hide").hasClass("d-none")) {
                        $("#btn-hide").removeClass("d-none");
                    }
                    else {
                    }
                    //$("#selected-items").append(`<div class="row justify-content-center align-items-center text-center " style="margin-top : 60px;">
                    //            <div class="col">
                    //                <img src="/Images/Group 2309661.png" alt="Your Image Alt Text" />
                    //            </div>
                    //        </div>
                    //        <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                    //            <div class="col">
                    //                <h4>No Items</h4>
                    //            </div>
                    //        </div>
                    //        <div class="row justify-content-center align-items-center text-center " style="margin-top: 14px;">
                    //            <div class="col">
                    //                <p>The selected menu type doesn't have any   <br /> items added to it.</p>
                    //            </div>
                    //        </div>`);
                }

            });

        }

        //Show Add Items Feature
        $('#btn-add-items').click(function () {

            //gets available items array
            const availableItems = [];
            $('#selected-items input:hidden').each(function () {
                availableItems.push($(this).val());
            });
            console.log(availableItems);

            $.ajax({
                type: "POST",
                url: "/Management/GetSelectiveItems",
                dataType: "json",
                contentType: "application/json",
                processData: false,
                data: JSON.stringify(availableItems),
                success: function (res) {
                    console.log(res);

                    //appends items in modal
                    $('#item-options-div').empty();

                    for (let item of res) {

                        $('#item-options-div').append(
                            `<div class="col-md-6 item-option">
                                                <label for="item-${item.id}" style="font-family:PoppinsFontmedium;" title="${item.name}">${item.name}</label>
                                            <input type="checkbox" class="checkbox-item" id="item-${item.id}" value="${item.id}">
                                        <input type="hidden" class="item-id" value="${item.id}" />
                                    </div>`
                        );
                    }


                    // add event listener to handle checkbox change
                    $('.checkbox-item').change(function () {
                        let executeHandler = true;

                        //check
                        var category = null;
                        $('input:radio[class=radio-item]:checked').each(function () {
                            var data = {};
                            category = $(this).val();
                        });
                        console.log(category);
                        if (category === null) {
                            Toast.fire({ icon: 'warning', title: 'Select a Subcategory first.' });
                            $(this).prop('checked', false); // Unchecks it
                            executeHandler = false;
                        }

                        if (executeHandler == true) {
                            handleCheckboxChange($(this), category);
                        }
                    });

                    //// function to handle checkbox changes
                    //function handleCheckboxChange(checkbox, categoryId) {
                    //    if (checkbox.is(':checked')) {
                    //        //createCard(checkbox, categoryId);
                    //    }
                    //    else {
                    //        let text = checkbox.siblings('label').text();
                    //        // Remove the card if the checkbox is unchecked
                    //        $('#selected-items .itemDiv:contains(' + text + ')').remove();
                    //    }
                    //}

                    //// append selected items
                    //function createCard(checkbox, categoryId) {
                    //    let label = checkbox.siblings('label').text();
                    //    let id = checkbox.siblings('input').val();

                    //    console.log(label);
                    //    console.log(id);

                    //    let activeButtonCategory = $('.active-category').val();

                    //    //with or without d-none
                    //    if (activeButtonCategory == categoryId) {
                    //        $('#selected-items').append(
                    //            `<div class="col-md-3 itemDiv">
                    //                        <div class="card card1" style="background-color: #F9F9FB;">
                    //                            <div class="card-body row">
                    //                                <label class="col-10 mb-0">${label}</label>
                    //                                <div class="col-2">
                    //                                            <span class="close cross" onclick="removeItem('${categoryId}','${id}',$(this))">&times;</span>
                    //                                    <input type="hidden" data-categoryId="${categoryId}" class="selected-item-id" value="${id}" />
                    //                                <div/>
                    //                            </div>
                    //                        </div>
                    //                    </div>`
                    //        );
                    //    }
                    //    else {
                    //        $('#selected-items').append(
                    //            `<div class="col-md-3 itemDiv d-none">
                    //                        <div class="card card1" style="background-color: #F9F9FB;">
                    //                            <div class="card-body row">
                    //                                <label class="col-10 mb-0">${label}</label>
                    //                                <div class="col-2">
                    //                                            <span class="close cross" onclick="removeItem('${categoryId}','${id}',$(this))">&times;</span>
                    //                                    <input type="hidden" data-categoryId="${categoryId}" class="selected-item-id" value="${id}" />
                    //                                <div/>
                    //                            </div>
                    //                        </div>
                    //                    </div>`
                    //        );
                    //    }

                    //}

                },
                error: function (error) {
                    toastr.error("Error", error.message);
                    return error;
                },
            });

            //shows modal
            $('#add-items-modal').modal('show');

        });


        //close addItems modal
        $('#addItems-close').click(function () {

            $('#add-items-modal').modal('hide');
        });

        //save selected mealTypes
        $('#items-save').click(function () {

            ////appends save button
            //if ($('#btn-save-all').length < 1) {
            //    $('#buttons').append(
            //        `<button type="button" class="btnmanager1 no-wrap mr-2" style="background-color : #77D4FC; color:black" onclick="saveAll()" id="btn-save-all">Save Changes</button>`
            //    );
            //}

            //gets selected items array
            var category = "";
            $('input:radio[class=radio-item]:checked').each(function () {
                var data = {};
                category = $(this).val();
            });
            console.log(category);
            var executeHttpRequest = true;

            const selectedItems = [];
            $('input:checkbox[class=checkbox-item]:checked').each(function () {
                var data = {};
                data.itemId = $(this).val();
                data.categoryId = category;

                selectedItems.push(data);
            });
            console.log(selectedItems);

            if (category == "") {
                Toast.fire({ icon: 'warning', title: 'Please Select a SubCategory.' });
                executeHttpRequest = false;
            }
            else if (selectedItems.length == 0) {
                Toast.fire({ icon: 'warning', title: 'Select a Items for SubCategory.' });
                executeHttpRequest = false;
            }

            if (executeHttpRequest == true) {
                loadHttpRequest("POST", "/Management/UpdateOrgMealItems", updateItemsHandler, JSON.stringify(selectedItems));
                //hides modal
                $('#add-items-modal').modal('hide');
            }

        });


    });

    function prioritizeMatchingIngredients(searchTerm) {
        const ingredients = $('#item-options-div .item-option');

        ingredients.sort(function (a, b) {
            const aText = $(a).find('label').text().toLowerCase();
            const bText = $(b).find('label').text().toLowerCase();

            if (aText.includes(searchTerm) && !bText.includes(searchTerm)) {
                return -1;
            } else if (!aText.includes(searchTerm) && bText.includes(searchTerm)) {
                return 1;
            } else {
                return 0;
            }
        });

        //$('#item-options-div').empty();

        $.each(ingredients, function (index, element) {
            $('#item-options-div').append(element);
        });
    }

    // Event handler for search input changes
    $('#searchinput').on('input', function () {
        const searchTerm = $(this).val().toLowerCase();
        prioritizeMatchingIngredients(searchTerm);
    });

    // Event handler for the backspace key or empty input
    $('#searchinput').on('keyup', function (e) {
        if (e.which === 8 || $(this).val() === '') {
            prioritizeMatchingIngredients('');
        }
    });

    // Search functionality
    $('#searchInput').on('input', function () {
        const searchTerm = $(this).val().toLowerCase();
        const mealDivs = $('.itemDiv');

        const mealDivsWithMatch = mealDivs.filter(function () {
            const labelText = $(this).find('label').text().toLowerCase();
            return labelText.includes(searchTerm) || searchTerm === '';
        });

        const mealDivsWithoutMatch = mealDivs.not(mealDivsWithMatch);

        mealDivs.detach();

        mealDivsWithMatch.appendTo('#selected-items');
        mealDivsWithoutMatch.appendTo('#selected-items');
    });

</script>

